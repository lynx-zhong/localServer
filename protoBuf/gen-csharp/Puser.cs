// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: puser.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from puser.proto</summary>
  public static partial class PuserReflection {

    #region Descriptor
    /// <summary>File descriptor for puser.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PuserReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtwdXNlci5wcm90bxIFcHJvdG8iaAoUUmVxdWVzdENyZWF0ZVJvbGVSZXES",
            "EgoKRmtjaXR5Y29kZRgBIAEoCRISCgpGa2NpdHluYW1lGAIgASgJEg0KBUV4",
            "dHJhGAMgASgJEgwKBE5hbWUYBCABKAkSCwoDU2V4GAUgASgFImgKFFJlcXVl",
            "c3RVcGRhdGVSb2xlUmVxEhIKCkZrY2l0eWNvZGUYASABKAkSEgoKRmtjaXR5",
            "bmFtZRgCIAEoCRINCgVFeHRyYRgDIAEoCRIMCgROYW1lGAQgASgJEgsKA1Nl",
            "eBgFIAEoBSJNCg5QVHJhc25wb3J0RGljZRIRCglEaXJlY3Rpb24YASABKAMS",
            "DgoGTnVtYmVyGAIgASgDEgwKBFVzZWQYAyABKAgSCgoCSWQYBCABKAMiZwoX",
            "UmVxdWVzdEZpbmRyYW5zcG9ydEluZm8SFQoNRmt0cmFuc3BvcnRpZBgDIAEo",
            "AxIkCgVEaWNlcxgEIAMoCzIVLnByb3RvLlBUcmFzbnBvcnREaWNlEg8KB1Rp",
            "bWVvdXQYBSABKAMiWQoWUmVxdWVzdEZpbmRyYW5zcG9ydFJzcBIsCgRMaXN0",
            "GAEgAygLMh4ucHJvdG8uUmVxdWVzdEZpbmRyYW5zcG9ydEluZm8SEQoJRGVm",
            "YXVsdElkGAIgASgDIjQKFlJlcXVlc3RBZGRUcmFuc3BvcnRSZXESGgoSRmt1",
            "c2VydHJhbnNwb3J0c2lkGAEgASgDIjIKE1JvbGVBdHRyaWJ1dGVDaGFuZ2US",
            "DAoEVHlwZRgBIAEoCRINCgVWYWx1ZRgCIAEoAyKNAQocU2VydmVyVG9DbGll",
            "bnRnZXRSb2xlSW5mb1JlcxIPCgdJc0R5aW5nGAIgASgIEiwKDWV4Y2VwdGlv",
            "bkNvZGUYBCADKA4yFS5wcm90by5Sb2xlU3RhdHVzVHlwZRIuCgpDaGFuZ2Vp",
            "dGVtGAEgAygLMhoucHJvdG8uUm9sZUF0dHJpYnV0ZUNoYW5nZSK8AwoRUmVx",
            "dWVzdEdldFJvbGVSc3ASEgoKRmtjaXR5Y29kZRgBIAEoCRISCgpGa2NpdHlu",
            "YW1lGAIgASgJEhcKD0ZrYmlydGhjaXR5Y29kZRgDIAEoCRIXCg9Ga2JpcnRo",
            "Y2l0eW5hbWUYBCABKAkSDgoGU3RhdHVzGAYgAygDEg0KBUV4dHJhGAUgASgJ",
            "Eg0KBUxldmVsGAcgASgDEhIKCkV4cGVyaW5jZXMYCCABKAMSDQoFVmlnb3IY",
            "CSABKAMSEAoITW9pc3R1cmUYCiABKAMSEQoJTnV0cml0aW9uGAsgASgDEg0K",
            "BUhhcHB5GAwgASgDEhEKCUNyZWF0ZWRhdBgNIAEoCRIMCgROYW1lGA4gASgJ",
            "EgsKA1NleBgPIAEoAxIPCgdEaWFtb25kGBEgASgDEgwKBEdvbGQYEiABKAMS",
            "DgoGRmt1dWlkGBMgASgJEhAKCENyaW1pbmFsGBQgASgDEhYKDlB1bmlzaG1l",
            "bnRUaW1lGBUgASgDEhMKC1dvcmtpbmdVdWlkGBYgASgDEhUKDVdvcmtpbmdJ",
            "bmNvbWUYFyABKAMSFQoNV29ya1RvdGFsVGltZRgYIAEoAyI+Cg1XYWxsZXRJ",
            "bmZvUmVzEg4KBkZrdXVpZBgCIAEoCRIPCgdEaWFtb25kGAMgASgDEgwKBEdv",
            "bGQYBCABKAMiGAoIUmFyZUluZm8SDAoEUmFyZRgBIAEoAyI7ChJSZXF1ZXN0",
            "TW92ZVJvbGVSZXESDgoGRGljZWlkGAEgASgDEhUKDUZrdHJhbnNwb3J0aWQY",
            "AiABKAMihgEKElJlcXVlc3RNb3ZlUm9sZVJzcBISCgpNb3ZlTnVtYmVyGAEg",
            "ASgDEiUKBndheWRhdBgCIAMoCzIVLnByb3RvLlJlcXVlc3RXYXlkYXRhEg8K",
            "B1JlZnJlc2gYAyABKAgSJAoFRGljZXMYBCADKAsyFS5wcm90by5QVHJhc25w",
            "b3J0RGljZSJXCg5SZXF1ZXN0V2F5ZGF0YRINCgVYYXhpcxgCIAEoAxINCgVZ",
            "YXhpcxgDIAEoAxIRCglEaXJlY3Rpb24YBCABKAgSFAoMT3JpZW50YXRpb25z",
            "GAUgASgDIi4KFVJlcXVlc3RSZWZyZXNoRGljZVJlcRIVCg1Ga3RyYW5zcG9y",
            "dGlkGAEgASgDIlgKFFJlcXVlc3RXYWxsZXRJbmZvUnNwEg4KBkZrdXVpZBgB",
            "IAEoCRIPCgdEaWFtb25kGAIgASgDEgwKBEdvbGQYAyABKAMSEQoJVXBkYXRl",
            "ZGF0GAQgASgJIj8KDUNoYW5nZUdvbGRSZXESDgoGRmt1dWlkGAEgASgJEg4K",
            "BlJlYXNvbhgCIAEoCRIOCgZBbW91bnQYAyABKAMiQgoQQ2hhbmdlRGlhbW9u",
            "ZFJlcRIOCgZGa3V1aWQYASABKAkSDgoGUmVhc29uGAIgASgJEg4KBkFtb3Vu",
            "dBgDIAEoAyq4AwoOUm9sZVN0YXR1c1R5cGUSDgoKU3RhdHVzWmVybxAAEiAK",
            "G1ByZWxpbWluYXJ5U2FjY2hhcmlmaWNhdGlvbhDjNhIbChZNZWRpdW1TYWNj",
            "aGFyaWZpY2F0aW9uEOQ2EhkKFEhpZ2hTYWNjaGFyaWZpY2F0aW9uEOU2EhsK",
            "FlByZWxpbWluYXJ5RGVoeWRyYXRpb24Q7TYSFgoRTWVkaXVtRGVoeWRyYXRp",
            "b24Q7jYSFAoPSGlnaERlaHlkcmF0aW9uEO82EhkKFFByZWxpbWluYXJ5U29m",
            "dGVuaW5nEPc2EhQKD01lZGl1bVNvZnRlbmluZxD4NhISCg1IaWdoU29mdGVu",
            "aW5nEPk2EhwKF1ByZWxpbWluYXJ5U2FsaW5pemF0aW9uEIE3EhcKEk1lZGl1",
            "bVNhbGluaXphdGlvbhCCNxIVChBIaWdoU2FsaW5pemF0aW9uEIM3EhoKFUR5",
            "aW5nU2FjY2hhcmlmaWNhdGlvbhCQThIVChBEeWluZ0RlaHlkcmF0aW9uEJFO",
            "EhMKDkR5aW5nU29mdGVuaW5nEJJOEhYKEUR5aW5nU2FsaW5pemF0aW9uEJNO",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Proto.RoleStatusType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestCreateRoleReq), global::Proto.RequestCreateRoleReq.Parser, new[]{ "Fkcitycode", "Fkcityname", "Extra", "Name", "Sex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestUpdateRoleReq), global::Proto.RequestUpdateRoleReq.Parser, new[]{ "Fkcitycode", "Fkcityname", "Extra", "Name", "Sex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PTrasnportDice), global::Proto.PTrasnportDice.Parser, new[]{ "Direction", "Number", "Used", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestFindransportInfo), global::Proto.RequestFindransportInfo.Parser, new[]{ "Fktransportid", "Dices", "Timeout" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestFindransportRsp), global::Proto.RequestFindransportRsp.Parser, new[]{ "List", "DefaultId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestAddTransportReq), global::Proto.RequestAddTransportReq.Parser, new[]{ "Fkusertransportsid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RoleAttributeChange), global::Proto.RoleAttributeChange.Parser, new[]{ "Type", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.ServerToClientgetRoleInfoRes), global::Proto.ServerToClientgetRoleInfoRes.Parser, new[]{ "IsDying", "ExceptionCode", "Changeitem" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestGetRoleRsp), global::Proto.RequestGetRoleRsp.Parser, new[]{ "Fkcitycode", "Fkcityname", "Fkbirthcitycode", "Fkbirthcityname", "Status", "Extra", "Level", "Experinces", "Vigor", "Moisture", "Nutrition", "Happy", "Createdat", "Name", "Sex", "Diamond", "Gold", "Fkuuid", "Criminal", "PunishmentTime", "WorkingUuid", "WorkingIncome", "WorkTotalTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.WalletInfoRes), global::Proto.WalletInfoRes.Parser, new[]{ "Fkuuid", "Diamond", "Gold" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RareInfo), global::Proto.RareInfo.Parser, new[]{ "Rare" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestMoveRoleReq), global::Proto.RequestMoveRoleReq.Parser, new[]{ "Diceid", "Fktransportid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestMoveRoleRsp), global::Proto.RequestMoveRoleRsp.Parser, new[]{ "MoveNumber", "Waydat", "Refresh", "Dices" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestWaydata), global::Proto.RequestWaydata.Parser, new[]{ "Xaxis", "Yaxis", "Direction", "Orientations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestRefreshDiceReq), global::Proto.RequestRefreshDiceReq.Parser, new[]{ "Fktransportid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestWalletInfoRsp), global::Proto.RequestWalletInfoRsp.Parser, new[]{ "Fkuuid", "Diamond", "Gold", "Updatedat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.ChangeGoldReq), global::Proto.ChangeGoldReq.Parser, new[]{ "Fkuuid", "Reason", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.ChangeDiamondReq), global::Proto.ChangeDiamondReq.Parser, new[]{ "Fkuuid", "Reason", "Amount" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RoleStatusType {
    [pbr::OriginalName("StatusZero")] StatusZero = 0,
    /// <summary>
    ///初阶饥饿异常，无影响
    /// </summary>
    [pbr::OriginalName("PreliminarySaccharification")] PreliminarySaccharification = 7011,
    /// <summary>
    ///中阶饥饿异常，无法使用交通工具
    /// </summary>
    [pbr::OriginalName("MediumSaccharification")] MediumSaccharification = 7012,
    /// <summary>
    ///高阶饥饿异常，包含以上所有效果，并且无法扩展森林
    /// </summary>
    [pbr::OriginalName("HighSaccharification")] HighSaccharification = 7013,
    /// <summary>
    ///初阶口渴异常，无影响
    /// </summary>
    [pbr::OriginalName("PreliminaryDehydration")] PreliminaryDehydration = 7021,
    /// <summary>
    ///中阶口渴异常，移动过程中概率出现停留\
    /// </summary>
    [pbr::OriginalName("MediumDehydration")] MediumDehydration = 7022,
    /// <summary>
    ///高阶口渴异常，包含以上所有效果，并且无法扩展荒漠；
    /// </summary>
    [pbr::OriginalName("HighDehydration")] HighDehydration = 7023,
    /// <summary>
    ///初阶疲惫异常，无影响
    /// </summary>
    [pbr::OriginalName("PreliminarySoftening")] PreliminarySoftening = 7031,
    /// <summary>
    ///中阶疲惫异常，移动上限减少，单次可移动上限不再是6
    /// </summary>
    [pbr::OriginalName("MediumSoftening")] MediumSoftening = 7032,
    /// <summary>
    ///高阶疲惫异常，包含以上所有效果，并且无法扩展水域；
    /// </summary>
    [pbr::OriginalName("HighSoftening")] HighSoftening = 7033,
    /// <summary>
    ///初阶焦虑异常，无影响
    /// </summary>
    [pbr::OriginalName("PreliminarySalinization")] PreliminarySalinization = 7041,
    /// <summary>
    ///中阶焦虑异常，中阶异常，无法进行投资；
    /// </summary>
    [pbr::OriginalName("MediumSalinization")] MediumSalinization = 7042,
    /// <summary>
    ///高阶焦虑异常，包含以上所有效果，并且无法扩展山地；
    /// </summary>
    [pbr::OriginalName("HighSalinization")] HighSalinization = 7043,
    /// <summary>
    ///饥饿濒死
    /// </summary>
    [pbr::OriginalName("DyingSaccharification")] DyingSaccharification = 10000,
    /// <summary>
    ///口渴濒死
    /// </summary>
    [pbr::OriginalName("DyingDehydration")] DyingDehydration = 10001,
    /// <summary>
    ///疲惫濒死
    /// </summary>
    [pbr::OriginalName("DyingSoftening")] DyingSoftening = 10002,
    /// <summary>
    ///焦虑濒死
    /// </summary>
    [pbr::OriginalName("DyingSalinization")] DyingSalinization = 10003,
  }

  #endregion

  #region Messages
  /// <summary>
  ///RequestCreateRoleReq 创建角色信息
  /// </summary>
  public sealed partial class RequestCreateRoleReq : pb::IMessage<RequestCreateRoleReq> {
    private static readonly pb::MessageParser<RequestCreateRoleReq> _parser = new pb::MessageParser<RequestCreateRoleReq>(() => new RequestCreateRoleReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestCreateRoleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCreateRoleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCreateRoleReq(RequestCreateRoleReq other) : this() {
      fkcitycode_ = other.fkcitycode_;
      fkcityname_ = other.fkcityname_;
      extra_ = other.extra_;
      name_ = other.name_;
      sex_ = other.sex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCreateRoleReq Clone() {
      return new RequestCreateRoleReq(this);
    }

    /// <summary>Field number for the "Fkcitycode" field.</summary>
    public const int FkcitycodeFieldNumber = 1;
    private string fkcitycode_ = "";
    /// <summary>
    ///Fkcitycode 所属城市code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkcitycode {
      get { return fkcitycode_; }
      set {
        fkcitycode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fkcityname" field.</summary>
    public const int FkcitynameFieldNumber = 2;
    private string fkcityname_ = "";
    /// <summary>
    ///Fkcityname 所属城市名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkcityname {
      get { return fkcityname_; }
      set {
        fkcityname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Extra" field.</summary>
    public const int ExtraFieldNumber = 3;
    private string extra_ = "";
    /// <summary>
    ///Extra 保存用户相关信息, 例如3d外观
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Extra {
      get { return extra_; }
      set {
        extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    ///Name 名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sex" field.</summary>
    public const int SexFieldNumber = 5;
    private int sex_;
    /// <summary>
    ///Sex 性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestCreateRoleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestCreateRoleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkcitycode != other.Fkcitycode) return false;
      if (Fkcityname != other.Fkcityname) return false;
      if (Extra != other.Extra) return false;
      if (Name != other.Name) return false;
      if (Sex != other.Sex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkcitycode.Length != 0) hash ^= Fkcitycode.GetHashCode();
      if (Fkcityname.Length != 0) hash ^= Fkcityname.GetHashCode();
      if (Extra.Length != 0) hash ^= Extra.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkcitycode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkcitycode);
      }
      if (Fkcityname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fkcityname);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Extra);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Sex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkcitycode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkcitycode);
      }
      if (Fkcityname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkcityname);
      }
      if (Extra.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestCreateRoleReq other) {
      if (other == null) {
        return;
      }
      if (other.Fkcitycode.Length != 0) {
        Fkcitycode = other.Fkcitycode;
      }
      if (other.Fkcityname.Length != 0) {
        Fkcityname = other.Fkcityname;
      }
      if (other.Extra.Length != 0) {
        Extra = other.Extra;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkcitycode = input.ReadString();
            break;
          }
          case 18: {
            Fkcityname = input.ReadString();
            break;
          }
          case 26: {
            Extra = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Sex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestUpdateRoleReq 更新角色信息
  /// </summary>
  public sealed partial class RequestUpdateRoleReq : pb::IMessage<RequestUpdateRoleReq> {
    private static readonly pb::MessageParser<RequestUpdateRoleReq> _parser = new pb::MessageParser<RequestUpdateRoleReq>(() => new RequestUpdateRoleReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestUpdateRoleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestUpdateRoleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestUpdateRoleReq(RequestUpdateRoleReq other) : this() {
      fkcitycode_ = other.fkcitycode_;
      fkcityname_ = other.fkcityname_;
      extra_ = other.extra_;
      name_ = other.name_;
      sex_ = other.sex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestUpdateRoleReq Clone() {
      return new RequestUpdateRoleReq(this);
    }

    /// <summary>Field number for the "Fkcitycode" field.</summary>
    public const int FkcitycodeFieldNumber = 1;
    private string fkcitycode_ = "";
    /// <summary>
    ///Fkcitycode 所属城市code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkcitycode {
      get { return fkcitycode_; }
      set {
        fkcitycode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fkcityname" field.</summary>
    public const int FkcitynameFieldNumber = 2;
    private string fkcityname_ = "";
    /// <summary>
    ///Fkcityname 所属城市名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkcityname {
      get { return fkcityname_; }
      set {
        fkcityname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Extra" field.</summary>
    public const int ExtraFieldNumber = 3;
    private string extra_ = "";
    /// <summary>
    ///Extra 保存用户相关信息, 例如3d外观
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Extra {
      get { return extra_; }
      set {
        extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    ///Name 名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sex" field.</summary>
    public const int SexFieldNumber = 5;
    private int sex_;
    /// <summary>
    ///Sex 性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestUpdateRoleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestUpdateRoleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkcitycode != other.Fkcitycode) return false;
      if (Fkcityname != other.Fkcityname) return false;
      if (Extra != other.Extra) return false;
      if (Name != other.Name) return false;
      if (Sex != other.Sex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkcitycode.Length != 0) hash ^= Fkcitycode.GetHashCode();
      if (Fkcityname.Length != 0) hash ^= Fkcityname.GetHashCode();
      if (Extra.Length != 0) hash ^= Extra.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkcitycode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkcitycode);
      }
      if (Fkcityname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fkcityname);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Extra);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Sex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkcitycode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkcitycode);
      }
      if (Fkcityname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkcityname);
      }
      if (Extra.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestUpdateRoleReq other) {
      if (other == null) {
        return;
      }
      if (other.Fkcitycode.Length != 0) {
        Fkcitycode = other.Fkcitycode;
      }
      if (other.Fkcityname.Length != 0) {
        Fkcityname = other.Fkcityname;
      }
      if (other.Extra.Length != 0) {
        Extra = other.Extra;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkcitycode = input.ReadString();
            break;
          }
          case 18: {
            Fkcityname = input.ReadString();
            break;
          }
          case 26: {
            Extra = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Sex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///PTrasnportDice 交通工具骰子
  /// </summary>
  public sealed partial class PTrasnportDice : pb::IMessage<PTrasnportDice> {
    private static readonly pb::MessageParser<PTrasnportDice> _parser = new pb::MessageParser<PTrasnportDice>(() => new PTrasnportDice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PTrasnportDice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PTrasnportDice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PTrasnportDice(PTrasnportDice other) : this() {
      direction_ = other.direction_;
      number_ = other.number_;
      used_ = other.used_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PTrasnportDice Clone() {
      return new PTrasnportDice(this);
    }

    /// <summary>Field number for the "Direction" field.</summary>
    public const int DirectionFieldNumber = 1;
    private long direction_;
    /// <summary>
    ///Direction 不需要数据库
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "Number" field.</summary>
    public const int NumberFieldNumber = 2;
    private long number_;
    /// <summary>
    ///Number 不需要数据库
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    /// <summary>Field number for the "Used" field.</summary>
    public const int UsedFieldNumber = 3;
    private bool used_;
    /// <summary>
    ///Used 不需要数据库
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Used {
      get { return used_; }
      set {
        used_ = value;
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 4;
    private long id_;
    /// <summary>
    ///Id 不需要数据库
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PTrasnportDice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PTrasnportDice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Direction != other.Direction) return false;
      if (Number != other.Number) return false;
      if (Used != other.Used) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Direction != 0L) hash ^= Direction.GetHashCode();
      if (Number != 0L) hash ^= Number.GetHashCode();
      if (Used != false) hash ^= Used.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Direction != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Direction);
      }
      if (Number != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Number);
      }
      if (Used != false) {
        output.WriteRawTag(24);
        output.WriteBool(Used);
      }
      if (Id != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Direction != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Direction);
      }
      if (Number != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Number);
      }
      if (Used != false) {
        size += 1 + 1;
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PTrasnportDice other) {
      if (other == null) {
        return;
      }
      if (other.Direction != 0L) {
        Direction = other.Direction;
      }
      if (other.Number != 0L) {
        Number = other.Number;
      }
      if (other.Used != false) {
        Used = other.Used;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Direction = input.ReadInt64();
            break;
          }
          case 16: {
            Number = input.ReadInt64();
            break;
          }
          case 24: {
            Used = input.ReadBool();
            break;
          }
          case 32: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestFindransportInfo 用户交通工具信息
  /// </summary>
  public sealed partial class RequestFindransportInfo : pb::IMessage<RequestFindransportInfo> {
    private static readonly pb::MessageParser<RequestFindransportInfo> _parser = new pb::MessageParser<RequestFindransportInfo>(() => new RequestFindransportInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestFindransportInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindransportInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindransportInfo(RequestFindransportInfo other) : this() {
      fktransportid_ = other.fktransportid_;
      dices_ = other.dices_.Clone();
      timeout_ = other.timeout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindransportInfo Clone() {
      return new RequestFindransportInfo(this);
    }

    /// <summary>Field number for the "Fktransportid" field.</summary>
    public const int FktransportidFieldNumber = 3;
    private long fktransportid_;
    /// <summary>
    ///Fktransportid 交通工具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Fktransportid {
      get { return fktransportid_; }
      set {
        fktransportid_ = value;
      }
    }

    /// <summary>Field number for the "Dices" field.</summary>
    public const int DicesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Proto.PTrasnportDice> _repeated_dices_codec
        = pb::FieldCodec.ForMessage(34, global::Proto.PTrasnportDice.Parser);
    private readonly pbc::RepeatedField<global::Proto.PTrasnportDice> dices_ = new pbc::RepeatedField<global::Proto.PTrasnportDice>();
    /// <summary>
    ///Dices 骰子定义
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PTrasnportDice> Dices {
      get { return dices_; }
    }

    /// <summary>Field number for the "Timeout" field.</summary>
    public const int TimeoutFieldNumber = 5;
    private long timeout_;
    /// <summary>
    ///Timeout 过期时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestFindransportInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestFindransportInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fktransportid != other.Fktransportid) return false;
      if(!dices_.Equals(other.dices_)) return false;
      if (Timeout != other.Timeout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fktransportid != 0L) hash ^= Fktransportid.GetHashCode();
      hash ^= dices_.GetHashCode();
      if (Timeout != 0L) hash ^= Timeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fktransportid != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Fktransportid);
      }
      dices_.WriteTo(output, _repeated_dices_codec);
      if (Timeout != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Timeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fktransportid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fktransportid);
      }
      size += dices_.CalculateSize(_repeated_dices_codec);
      if (Timeout != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestFindransportInfo other) {
      if (other == null) {
        return;
      }
      if (other.Fktransportid != 0L) {
        Fktransportid = other.Fktransportid;
      }
      dices_.Add(other.dices_);
      if (other.Timeout != 0L) {
        Timeout = other.Timeout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            Fktransportid = input.ReadInt64();
            break;
          }
          case 34: {
            dices_.AddEntriesFrom(input, _repeated_dices_codec);
            break;
          }
          case 40: {
            Timeout = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestFindransportRsp 用户交通工具信息
  /// </summary>
  public sealed partial class RequestFindransportRsp : pb::IMessage<RequestFindransportRsp> {
    private static readonly pb::MessageParser<RequestFindransportRsp> _parser = new pb::MessageParser<RequestFindransportRsp>(() => new RequestFindransportRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestFindransportRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindransportRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindransportRsp(RequestFindransportRsp other) : this() {
      list_ = other.list_.Clone();
      defaultId_ = other.defaultId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindransportRsp Clone() {
      return new RequestFindransportRsp(this);
    }

    /// <summary>Field number for the "List" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.RequestFindransportInfo> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.RequestFindransportInfo.Parser);
    private readonly pbc::RepeatedField<global::Proto.RequestFindransportInfo> list_ = new pbc::RepeatedField<global::Proto.RequestFindransportInfo>();
    /// <summary>
    ///List 户交通工具列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.RequestFindransportInfo> List {
      get { return list_; }
    }

    /// <summary>Field number for the "DefaultId" field.</summary>
    public const int DefaultIdFieldNumber = 2;
    private long defaultId_;
    /// <summary>
    /// 用户默认交通工具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DefaultId {
      get { return defaultId_; }
      set {
        defaultId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestFindransportRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestFindransportRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      if (DefaultId != other.DefaultId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (DefaultId != 0L) hash ^= DefaultId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (DefaultId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DefaultId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (DefaultId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DefaultId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestFindransportRsp other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      if (other.DefaultId != 0L) {
        DefaultId = other.DefaultId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
          case 16: {
            DefaultId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestAddTransportReq 购买用户添加交通工具
  /// </summary>
  public sealed partial class RequestAddTransportReq : pb::IMessage<RequestAddTransportReq> {
    private static readonly pb::MessageParser<RequestAddTransportReq> _parser = new pb::MessageParser<RequestAddTransportReq>(() => new RequestAddTransportReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestAddTransportReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddTransportReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddTransportReq(RequestAddTransportReq other) : this() {
      fkusertransportsid_ = other.fkusertransportsid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddTransportReq Clone() {
      return new RequestAddTransportReq(this);
    }

    /// <summary>Field number for the "Fkusertransportsid" field.</summary>
    public const int FkusertransportsidFieldNumber = 1;
    private long fkusertransportsid_;
    /// <summary>
    ///Fkusertransportsid 交通工具ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Fkusertransportsid {
      get { return fkusertransportsid_; }
      set {
        fkusertransportsid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestAddTransportReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestAddTransportReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkusertransportsid != other.Fkusertransportsid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkusertransportsid != 0L) hash ^= Fkusertransportsid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkusertransportsid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Fkusertransportsid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkusertransportsid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fkusertransportsid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestAddTransportReq other) {
      if (other == null) {
        return;
      }
      if (other.Fkusertransportsid != 0L) {
        Fkusertransportsid = other.Fkusertransportsid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Fkusertransportsid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///属性定义可以参考 RequestGetRoleRsp 两者的字段名是通用的
  /// </summary>
  public sealed partial class RoleAttributeChange : pb::IMessage<RoleAttributeChange> {
    private static readonly pb::MessageParser<RoleAttributeChange> _parser = new pb::MessageParser<RoleAttributeChange>(() => new RoleAttributeChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleAttributeChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleAttributeChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleAttributeChange(RoleAttributeChange other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleAttributeChange Clone() {
      return new RoleAttributeChange(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    /// <summary>
    ///Type 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private long value_;
    /// <summary>
    ///Value 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleAttributeChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleAttributeChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Value != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleAttributeChange other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 属性变更推送 1004
  /// </summary>
  public sealed partial class ServerToClientgetRoleInfoRes : pb::IMessage<ServerToClientgetRoleInfoRes> {
    private static readonly pb::MessageParser<ServerToClientgetRoleInfoRes> _parser = new pb::MessageParser<ServerToClientgetRoleInfoRes>(() => new ServerToClientgetRoleInfoRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerToClientgetRoleInfoRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerToClientgetRoleInfoRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerToClientgetRoleInfoRes(ServerToClientgetRoleInfoRes other) : this() {
      isDying_ = other.isDying_;
      exceptionCode_ = other.exceptionCode_.Clone();
      changeitem_ = other.changeitem_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerToClientgetRoleInfoRes Clone() {
      return new ServerToClientgetRoleInfoRes(this);
    }

    /// <summary>Field number for the "IsDying" field.</summary>
    public const int IsDyingFieldNumber = 2;
    private bool isDying_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDying {
      get { return isDying_; }
      set {
        isDying_ = value;
      }
    }

    /// <summary>Field number for the "exceptionCode" field.</summary>
    public const int ExceptionCodeFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Proto.RoleStatusType> _repeated_exceptionCode_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Proto.RoleStatusType) x);
    private readonly pbc::RepeatedField<global::Proto.RoleStatusType> exceptionCode_ = new pbc::RepeatedField<global::Proto.RoleStatusType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.RoleStatusType> ExceptionCode {
      get { return exceptionCode_; }
    }

    /// <summary>Field number for the "Changeitem" field.</summary>
    public const int ChangeitemFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.RoleAttributeChange> _repeated_changeitem_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.RoleAttributeChange.Parser);
    private readonly pbc::RepeatedField<global::Proto.RoleAttributeChange> changeitem_ = new pbc::RepeatedField<global::Proto.RoleAttributeChange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.RoleAttributeChange> Changeitem {
      get { return changeitem_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerToClientgetRoleInfoRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerToClientgetRoleInfoRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsDying != other.IsDying) return false;
      if(!exceptionCode_.Equals(other.exceptionCode_)) return false;
      if(!changeitem_.Equals(other.changeitem_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsDying != false) hash ^= IsDying.GetHashCode();
      hash ^= exceptionCode_.GetHashCode();
      hash ^= changeitem_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      changeitem_.WriteTo(output, _repeated_changeitem_codec);
      if (IsDying != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsDying);
      }
      exceptionCode_.WriteTo(output, _repeated_exceptionCode_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsDying != false) {
        size += 1 + 1;
      }
      size += exceptionCode_.CalculateSize(_repeated_exceptionCode_codec);
      size += changeitem_.CalculateSize(_repeated_changeitem_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerToClientgetRoleInfoRes other) {
      if (other == null) {
        return;
      }
      if (other.IsDying != false) {
        IsDying = other.IsDying;
      }
      exceptionCode_.Add(other.exceptionCode_);
      changeitem_.Add(other.changeitem_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            changeitem_.AddEntriesFrom(input, _repeated_changeitem_codec);
            break;
          }
          case 16: {
            IsDying = input.ReadBool();
            break;
          }
          case 34:
          case 32: {
            exceptionCode_.AddEntriesFrom(input, _repeated_exceptionCode_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestGetRoleRsp 用户角色获取信息
  /// </summary>
  public sealed partial class RequestGetRoleRsp : pb::IMessage<RequestGetRoleRsp> {
    private static readonly pb::MessageParser<RequestGetRoleRsp> _parser = new pb::MessageParser<RequestGetRoleRsp>(() => new RequestGetRoleRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestGetRoleRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetRoleRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetRoleRsp(RequestGetRoleRsp other) : this() {
      fkcitycode_ = other.fkcitycode_;
      fkcityname_ = other.fkcityname_;
      fkbirthcitycode_ = other.fkbirthcitycode_;
      fkbirthcityname_ = other.fkbirthcityname_;
      status_ = other.status_.Clone();
      extra_ = other.extra_;
      level_ = other.level_;
      experinces_ = other.experinces_;
      vigor_ = other.vigor_;
      moisture_ = other.moisture_;
      nutrition_ = other.nutrition_;
      happy_ = other.happy_;
      createdat_ = other.createdat_;
      name_ = other.name_;
      sex_ = other.sex_;
      diamond_ = other.diamond_;
      gold_ = other.gold_;
      fkuuid_ = other.fkuuid_;
      criminal_ = other.criminal_;
      punishmentTime_ = other.punishmentTime_;
      workingUuid_ = other.workingUuid_;
      workingIncome_ = other.workingIncome_;
      workTotalTime_ = other.workTotalTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetRoleRsp Clone() {
      return new RequestGetRoleRsp(this);
    }

    /// <summary>Field number for the "Fkcitycode" field.</summary>
    public const int FkcitycodeFieldNumber = 1;
    private string fkcitycode_ = "";
    /// <summary>
    ///Fkcitycode 所属城市code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkcitycode {
      get { return fkcitycode_; }
      set {
        fkcitycode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fkcityname" field.</summary>
    public const int FkcitynameFieldNumber = 2;
    private string fkcityname_ = "";
    /// <summary>
    ///Fkcityname 所属城市名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkcityname {
      get { return fkcityname_; }
      set {
        fkcityname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fkbirthcitycode" field.</summary>
    public const int FkbirthcitycodeFieldNumber = 3;
    private string fkbirthcitycode_ = "";
    /// <summary>
    ///Fkbirthcitycode 出生城市code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkbirthcitycode {
      get { return fkbirthcitycode_; }
      set {
        fkbirthcitycode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fkbirthcityname" field.</summary>
    public const int FkbirthcitynameFieldNumber = 4;
    private string fkbirthcityname_ = "";
    /// <summary>
    ///Fkbirthcityname 出生城市名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkbirthcityname {
      get { return fkbirthcityname_; }
      set {
        fkbirthcityname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 6;
    private static readonly pb::FieldCodec<long> _repeated_status_codec
        = pb::FieldCodec.ForInt64(50);
    private readonly pbc::RepeatedField<long> status_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///Status 状态??
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Status {
      get { return status_; }
    }

    /// <summary>Field number for the "Extra" field.</summary>
    public const int ExtraFieldNumber = 5;
    private string extra_ = "";
    /// <summary>
    ///Extra 保存用户相关信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Extra {
      get { return extra_; }
      set {
        extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 7;
    private long level_;
    /// <summary>
    ///Level 级别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Experinces" field.</summary>
    public const int ExperincesFieldNumber = 8;
    private long experinces_;
    /// <summary>
    ///Experinces 经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Experinces {
      get { return experinces_; }
      set {
        experinces_ = value;
      }
    }

    /// <summary>Field number for the "Vigor" field.</summary>
    public const int VigorFieldNumber = 9;
    private long vigor_;
    /// <summary>
    ///Vigor 精力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Vigor {
      get { return vigor_; }
      set {
        vigor_ = value;
      }
    }

    /// <summary>Field number for the "Moisture" field.</summary>
    public const int MoistureFieldNumber = 10;
    private long moisture_;
    /// <summary>
    ///Moisture 水分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Moisture {
      get { return moisture_; }
      set {
        moisture_ = value;
      }
    }

    /// <summary>Field number for the "Nutrition" field.</summary>
    public const int NutritionFieldNumber = 11;
    private long nutrition_;
    /// <summary>
    ///Nutrition  营养
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Nutrition {
      get { return nutrition_; }
      set {
        nutrition_ = value;
      }
    }

    /// <summary>Field number for the "Happy" field.</summary>
    public const int HappyFieldNumber = 12;
    private long happy_;
    /// <summary>
    ///Happy  快乐
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Happy {
      get { return happy_; }
      set {
        happy_ = value;
      }
    }

    /// <summary>Field number for the "Createdat" field.</summary>
    public const int CreatedatFieldNumber = 13;
    private string createdat_ = "";
    /// <summary>
    ///Createdat 创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Createdat {
      get { return createdat_; }
      set {
        createdat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 14;
    private string name_ = "";
    /// <summary>
    ///Name 名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sex" field.</summary>
    public const int SexFieldNumber = 15;
    private long sex_;
    /// <summary>
    ///Sex 性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "Diamond" field.</summary>
    public const int DiamondFieldNumber = 17;
    private long diamond_;
    /// <summary>
    ///Diamond 钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Diamond {
      get { return diamond_; }
      set {
        diamond_ = value;
      }
    }

    /// <summary>Field number for the "Gold" field.</summary>
    public const int GoldFieldNumber = 18;
    private long gold_;
    /// <summary>
    ///Gold 金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 19;
    private string fkuuid_ = "";
    /// <summary>
    ///Fkuuid 用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Criminal" field.</summary>
    public const int CriminalFieldNumber = 20;
    private long criminal_;
    /// <summary>
    /// 犯罪值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Criminal {
      get { return criminal_; }
      set {
        criminal_ = value;
      }
    }

    /// <summary>Field number for the "PunishmentTime" field.</summary>
    public const int PunishmentTimeFieldNumber = 21;
    private long punishmentTime_;
    /// <summary>
    /// 拘留时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PunishmentTime {
      get { return punishmentTime_; }
      set {
        punishmentTime_ = value;
      }
    }

    /// <summary>Field number for the "WorkingUuid" field.</summary>
    public const int WorkingUuidFieldNumber = 22;
    private long workingUuid_;
    /// <summary>
    /// 玩家打工的建筑Uuid  如果为0则表示玩家未在打工
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WorkingUuid {
      get { return workingUuid_; }
      set {
        workingUuid_ = value;
      }
    }

    /// <summary>Field number for the "WorkingIncome" field.</summary>
    public const int WorkingIncomeFieldNumber = 23;
    private long workingIncome_;
    /// <summary>
    /// 收益
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WorkingIncome {
      get { return workingIncome_; }
      set {
        workingIncome_ = value;
      }
    }

    /// <summary>Field number for the "WorkTotalTime" field.</summary>
    public const int WorkTotalTimeFieldNumber = 24;
    private long workTotalTime_;
    /// <summary>
    /// 玩家今日的打工总时长 秒数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WorkTotalTime {
      get { return workTotalTime_; }
      set {
        workTotalTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestGetRoleRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestGetRoleRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkcitycode != other.Fkcitycode) return false;
      if (Fkcityname != other.Fkcityname) return false;
      if (Fkbirthcitycode != other.Fkbirthcitycode) return false;
      if (Fkbirthcityname != other.Fkbirthcityname) return false;
      if(!status_.Equals(other.status_)) return false;
      if (Extra != other.Extra) return false;
      if (Level != other.Level) return false;
      if (Experinces != other.Experinces) return false;
      if (Vigor != other.Vigor) return false;
      if (Moisture != other.Moisture) return false;
      if (Nutrition != other.Nutrition) return false;
      if (Happy != other.Happy) return false;
      if (Createdat != other.Createdat) return false;
      if (Name != other.Name) return false;
      if (Sex != other.Sex) return false;
      if (Diamond != other.Diamond) return false;
      if (Gold != other.Gold) return false;
      if (Fkuuid != other.Fkuuid) return false;
      if (Criminal != other.Criminal) return false;
      if (PunishmentTime != other.PunishmentTime) return false;
      if (WorkingUuid != other.WorkingUuid) return false;
      if (WorkingIncome != other.WorkingIncome) return false;
      if (WorkTotalTime != other.WorkTotalTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkcitycode.Length != 0) hash ^= Fkcitycode.GetHashCode();
      if (Fkcityname.Length != 0) hash ^= Fkcityname.GetHashCode();
      if (Fkbirthcitycode.Length != 0) hash ^= Fkbirthcitycode.GetHashCode();
      if (Fkbirthcityname.Length != 0) hash ^= Fkbirthcityname.GetHashCode();
      hash ^= status_.GetHashCode();
      if (Extra.Length != 0) hash ^= Extra.GetHashCode();
      if (Level != 0L) hash ^= Level.GetHashCode();
      if (Experinces != 0L) hash ^= Experinces.GetHashCode();
      if (Vigor != 0L) hash ^= Vigor.GetHashCode();
      if (Moisture != 0L) hash ^= Moisture.GetHashCode();
      if (Nutrition != 0L) hash ^= Nutrition.GetHashCode();
      if (Happy != 0L) hash ^= Happy.GetHashCode();
      if (Createdat.Length != 0) hash ^= Createdat.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Sex != 0L) hash ^= Sex.GetHashCode();
      if (Diamond != 0L) hash ^= Diamond.GetHashCode();
      if (Gold != 0L) hash ^= Gold.GetHashCode();
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Criminal != 0L) hash ^= Criminal.GetHashCode();
      if (PunishmentTime != 0L) hash ^= PunishmentTime.GetHashCode();
      if (WorkingUuid != 0L) hash ^= WorkingUuid.GetHashCode();
      if (WorkingIncome != 0L) hash ^= WorkingIncome.GetHashCode();
      if (WorkTotalTime != 0L) hash ^= WorkTotalTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkcitycode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkcitycode);
      }
      if (Fkcityname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fkcityname);
      }
      if (Fkbirthcitycode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Fkbirthcitycode);
      }
      if (Fkbirthcityname.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Fkbirthcityname);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Extra);
      }
      status_.WriteTo(output, _repeated_status_codec);
      if (Level != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Level);
      }
      if (Experinces != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Experinces);
      }
      if (Vigor != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Vigor);
      }
      if (Moisture != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(Moisture);
      }
      if (Nutrition != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(Nutrition);
      }
      if (Happy != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(Happy);
      }
      if (Createdat.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Createdat);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Name);
      }
      if (Sex != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(Sex);
      }
      if (Diamond != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(Diamond);
      }
      if (Gold != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(Gold);
      }
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Fkuuid);
      }
      if (Criminal != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(Criminal);
      }
      if (PunishmentTime != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(PunishmentTime);
      }
      if (WorkingUuid != 0L) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(WorkingUuid);
      }
      if (WorkingIncome != 0L) {
        output.WriteRawTag(184, 1);
        output.WriteInt64(WorkingIncome);
      }
      if (WorkTotalTime != 0L) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(WorkTotalTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkcitycode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkcitycode);
      }
      if (Fkcityname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkcityname);
      }
      if (Fkbirthcitycode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkbirthcitycode);
      }
      if (Fkbirthcityname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkbirthcityname);
      }
      size += status_.CalculateSize(_repeated_status_codec);
      if (Extra.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
      }
      if (Level != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Level);
      }
      if (Experinces != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Experinces);
      }
      if (Vigor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Vigor);
      }
      if (Moisture != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Moisture);
      }
      if (Nutrition != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Nutrition);
      }
      if (Happy != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Happy);
      }
      if (Createdat.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Createdat);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Sex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Sex);
      }
      if (Diamond != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Diamond);
      }
      if (Gold != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Gold);
      }
      if (Fkuuid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Criminal != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Criminal);
      }
      if (PunishmentTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PunishmentTime);
      }
      if (WorkingUuid != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(WorkingUuid);
      }
      if (WorkingIncome != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(WorkingIncome);
      }
      if (WorkTotalTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(WorkTotalTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestGetRoleRsp other) {
      if (other == null) {
        return;
      }
      if (other.Fkcitycode.Length != 0) {
        Fkcitycode = other.Fkcitycode;
      }
      if (other.Fkcityname.Length != 0) {
        Fkcityname = other.Fkcityname;
      }
      if (other.Fkbirthcitycode.Length != 0) {
        Fkbirthcitycode = other.Fkbirthcitycode;
      }
      if (other.Fkbirthcityname.Length != 0) {
        Fkbirthcityname = other.Fkbirthcityname;
      }
      status_.Add(other.status_);
      if (other.Extra.Length != 0) {
        Extra = other.Extra;
      }
      if (other.Level != 0L) {
        Level = other.Level;
      }
      if (other.Experinces != 0L) {
        Experinces = other.Experinces;
      }
      if (other.Vigor != 0L) {
        Vigor = other.Vigor;
      }
      if (other.Moisture != 0L) {
        Moisture = other.Moisture;
      }
      if (other.Nutrition != 0L) {
        Nutrition = other.Nutrition;
      }
      if (other.Happy != 0L) {
        Happy = other.Happy;
      }
      if (other.Createdat.Length != 0) {
        Createdat = other.Createdat;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Sex != 0L) {
        Sex = other.Sex;
      }
      if (other.Diamond != 0L) {
        Diamond = other.Diamond;
      }
      if (other.Gold != 0L) {
        Gold = other.Gold;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Criminal != 0L) {
        Criminal = other.Criminal;
      }
      if (other.PunishmentTime != 0L) {
        PunishmentTime = other.PunishmentTime;
      }
      if (other.WorkingUuid != 0L) {
        WorkingUuid = other.WorkingUuid;
      }
      if (other.WorkingIncome != 0L) {
        WorkingIncome = other.WorkingIncome;
      }
      if (other.WorkTotalTime != 0L) {
        WorkTotalTime = other.WorkTotalTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkcitycode = input.ReadString();
            break;
          }
          case 18: {
            Fkcityname = input.ReadString();
            break;
          }
          case 26: {
            Fkbirthcitycode = input.ReadString();
            break;
          }
          case 34: {
            Fkbirthcityname = input.ReadString();
            break;
          }
          case 42: {
            Extra = input.ReadString();
            break;
          }
          case 50:
          case 48: {
            status_.AddEntriesFrom(input, _repeated_status_codec);
            break;
          }
          case 56: {
            Level = input.ReadInt64();
            break;
          }
          case 64: {
            Experinces = input.ReadInt64();
            break;
          }
          case 72: {
            Vigor = input.ReadInt64();
            break;
          }
          case 80: {
            Moisture = input.ReadInt64();
            break;
          }
          case 88: {
            Nutrition = input.ReadInt64();
            break;
          }
          case 96: {
            Happy = input.ReadInt64();
            break;
          }
          case 106: {
            Createdat = input.ReadString();
            break;
          }
          case 114: {
            Name = input.ReadString();
            break;
          }
          case 120: {
            Sex = input.ReadInt64();
            break;
          }
          case 136: {
            Diamond = input.ReadInt64();
            break;
          }
          case 144: {
            Gold = input.ReadInt64();
            break;
          }
          case 154: {
            Fkuuid = input.ReadString();
            break;
          }
          case 160: {
            Criminal = input.ReadInt64();
            break;
          }
          case 168: {
            PunishmentTime = input.ReadInt64();
            break;
          }
          case 176: {
            WorkingUuid = input.ReadInt64();
            break;
          }
          case 184: {
            WorkingIncome = input.ReadInt64();
            break;
          }
          case 192: {
            WorkTotalTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///WalletInfo 用户钱包信息
  /// </summary>
  public sealed partial class WalletInfoRes : pb::IMessage<WalletInfoRes> {
    private static readonly pb::MessageParser<WalletInfoRes> _parser = new pb::MessageParser<WalletInfoRes>(() => new WalletInfoRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WalletInfoRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WalletInfoRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WalletInfoRes(WalletInfoRes other) : this() {
      fkuuid_ = other.fkuuid_;
      diamond_ = other.diamond_;
      gold_ = other.gold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WalletInfoRes Clone() {
      return new WalletInfoRes(this);
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 2;
    private string fkuuid_ = "";
    /// <summary>
    ///Fkuuid 用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Diamond" field.</summary>
    public const int DiamondFieldNumber = 3;
    private long diamond_;
    /// <summary>
    ///Diamond 钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Diamond {
      get { return diamond_; }
      set {
        diamond_ = value;
      }
    }

    /// <summary>Field number for the "Gold" field.</summary>
    public const int GoldFieldNumber = 4;
    private long gold_;
    /// <summary>
    ///Gold 金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WalletInfoRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WalletInfoRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkuuid != other.Fkuuid) return false;
      if (Diamond != other.Diamond) return false;
      if (Gold != other.Gold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Diamond != 0L) hash ^= Diamond.GetHashCode();
      if (Gold != 0L) hash ^= Gold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fkuuid);
      }
      if (Diamond != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Diamond);
      }
      if (Gold != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Diamond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Diamond);
      }
      if (Gold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WalletInfoRes other) {
      if (other == null) {
        return;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Diamond != 0L) {
        Diamond = other.Diamond;
      }
      if (other.Gold != 0L) {
        Gold = other.Gold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Fkuuid = input.ReadString();
            break;
          }
          case 24: {
            Diamond = input.ReadInt64();
            break;
          }
          case 32: {
            Gold = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RareInfo 用户稀土信息
  /// </summary>
  public sealed partial class RareInfo : pb::IMessage<RareInfo> {
    private static readonly pb::MessageParser<RareInfo> _parser = new pb::MessageParser<RareInfo>(() => new RareInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RareInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RareInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RareInfo(RareInfo other) : this() {
      rare_ = other.rare_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RareInfo Clone() {
      return new RareInfo(this);
    }

    /// <summary>Field number for the "Rare" field.</summary>
    public const int RareFieldNumber = 1;
    private long rare_;
    /// <summary>
    ///Rare 稀土数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Rare {
      get { return rare_; }
      set {
        rare_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RareInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RareInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rare != other.Rare) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rare != 0L) hash ^= Rare.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rare != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Rare);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rare != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Rare);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RareInfo other) {
      if (other == null) {
        return;
      }
      if (other.Rare != 0L) {
        Rare = other.Rare;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rare = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestMoveRoleReq 移动
  /// </summary>
  public sealed partial class RequestMoveRoleReq : pb::IMessage<RequestMoveRoleReq> {
    private static readonly pb::MessageParser<RequestMoveRoleReq> _parser = new pb::MessageParser<RequestMoveRoleReq>(() => new RequestMoveRoleReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestMoveRoleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMoveRoleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMoveRoleReq(RequestMoveRoleReq other) : this() {
      diceid_ = other.diceid_;
      fktransportid_ = other.fktransportid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMoveRoleReq Clone() {
      return new RequestMoveRoleReq(this);
    }

    /// <summary>Field number for the "Diceid" field.</summary>
    public const int DiceidFieldNumber = 1;
    private long diceid_;
    /// <summary>
    ///Dice 使用的骰子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Diceid {
      get { return diceid_; }
      set {
        diceid_ = value;
      }
    }

    /// <summary>Field number for the "Fktransportid" field.</summary>
    public const int FktransportidFieldNumber = 2;
    private long fktransportid_;
    /// <summary>
    ///Fktransportid 交通工具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Fktransportid {
      get { return fktransportid_; }
      set {
        fktransportid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestMoveRoleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestMoveRoleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Diceid != other.Diceid) return false;
      if (Fktransportid != other.Fktransportid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Diceid != 0L) hash ^= Diceid.GetHashCode();
      if (Fktransportid != 0L) hash ^= Fktransportid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Diceid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Diceid);
      }
      if (Fktransportid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Fktransportid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Diceid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Diceid);
      }
      if (Fktransportid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fktransportid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestMoveRoleReq other) {
      if (other == null) {
        return;
      }
      if (other.Diceid != 0L) {
        Diceid = other.Diceid;
      }
      if (other.Fktransportid != 0L) {
        Fktransportid = other.Fktransportid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Diceid = input.ReadInt64();
            break;
          }
          case 16: {
            Fktransportid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestMoveRoleRsp : pb::IMessage<RequestMoveRoleRsp> {
    private static readonly pb::MessageParser<RequestMoveRoleRsp> _parser = new pb::MessageParser<RequestMoveRoleRsp>(() => new RequestMoveRoleRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestMoveRoleRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMoveRoleRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMoveRoleRsp(RequestMoveRoleRsp other) : this() {
      moveNumber_ = other.moveNumber_;
      waydat_ = other.waydat_.Clone();
      refresh_ = other.refresh_;
      dices_ = other.dices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMoveRoleRsp Clone() {
      return new RequestMoveRoleRsp(this);
    }

    /// <summary>Field number for the "MoveNumber" field.</summary>
    public const int MoveNumberFieldNumber = 1;
    private long moveNumber_;
    /// <summary>
    ///MoveNumber  移动步数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MoveNumber {
      get { return moveNumber_; }
      set {
        moveNumber_ = value;
      }
    }

    /// <summary>Field number for the "waydat" field.</summary>
    public const int WaydatFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto.RequestWaydata> _repeated_waydat_codec
        = pb::FieldCodec.ForMessage(18, global::Proto.RequestWaydata.Parser);
    private readonly pbc::RepeatedField<global::Proto.RequestWaydata> waydat_ = new pbc::RepeatedField<global::Proto.RequestWaydata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.RequestWaydata> Waydat {
      get { return waydat_; }
    }

    /// <summary>Field number for the "Refresh" field.</summary>
    public const int RefreshFieldNumber = 3;
    private bool refresh_;
    /// <summary>
    /// 是否刷新骰子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Refresh {
      get { return refresh_; }
      set {
        refresh_ = value;
      }
    }

    /// <summary>Field number for the "Dices" field.</summary>
    public const int DicesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Proto.PTrasnportDice> _repeated_dices_codec
        = pb::FieldCodec.ForMessage(34, global::Proto.PTrasnportDice.Parser);
    private readonly pbc::RepeatedField<global::Proto.PTrasnportDice> dices_ = new pbc::RepeatedField<global::Proto.PTrasnportDice>();
    /// <summary>
    /// 新的骰子数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PTrasnportDice> Dices {
      get { return dices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestMoveRoleRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestMoveRoleRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MoveNumber != other.MoveNumber) return false;
      if(!waydat_.Equals(other.waydat_)) return false;
      if (Refresh != other.Refresh) return false;
      if(!dices_.Equals(other.dices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MoveNumber != 0L) hash ^= MoveNumber.GetHashCode();
      hash ^= waydat_.GetHashCode();
      if (Refresh != false) hash ^= Refresh.GetHashCode();
      hash ^= dices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MoveNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MoveNumber);
      }
      waydat_.WriteTo(output, _repeated_waydat_codec);
      if (Refresh != false) {
        output.WriteRawTag(24);
        output.WriteBool(Refresh);
      }
      dices_.WriteTo(output, _repeated_dices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MoveNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MoveNumber);
      }
      size += waydat_.CalculateSize(_repeated_waydat_codec);
      if (Refresh != false) {
        size += 1 + 1;
      }
      size += dices_.CalculateSize(_repeated_dices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestMoveRoleRsp other) {
      if (other == null) {
        return;
      }
      if (other.MoveNumber != 0L) {
        MoveNumber = other.MoveNumber;
      }
      waydat_.Add(other.waydat_);
      if (other.Refresh != false) {
        Refresh = other.Refresh;
      }
      dices_.Add(other.dices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MoveNumber = input.ReadInt64();
            break;
          }
          case 18: {
            waydat_.AddEntriesFrom(input, _repeated_waydat_codec);
            break;
          }
          case 24: {
            Refresh = input.ReadBool();
            break;
          }
          case 34: {
            dices_.AddEntriesFrom(input, _repeated_dices_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestWaydata : pb::IMessage<RequestWaydata> {
    private static readonly pb::MessageParser<RequestWaydata> _parser = new pb::MessageParser<RequestWaydata>(() => new RequestWaydata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestWaydata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWaydata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWaydata(RequestWaydata other) : this() {
      xaxis_ = other.xaxis_;
      yaxis_ = other.yaxis_;
      direction_ = other.direction_;
      orientations_ = other.orientations_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWaydata Clone() {
      return new RequestWaydata(this);
    }

    /// <summary>Field number for the "Xaxis" field.</summary>
    public const int XaxisFieldNumber = 2;
    private long xaxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Xaxis {
      get { return xaxis_; }
      set {
        xaxis_ = value;
      }
    }

    /// <summary>Field number for the "Yaxis" field.</summary>
    public const int YaxisFieldNumber = 3;
    private long yaxis_;
    /// <summary>
    ///Yaxis Y坐标或下标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Yaxis {
      get { return yaxis_; }
      set {
        yaxis_ = value;
      }
    }

    /// <summary>Field number for the "Direction" field.</summary>
    public const int DirectionFieldNumber = 4;
    private bool direction_;
    /// <summary>
    ///Direction 行走方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "Orientations" field.</summary>
    public const int OrientationsFieldNumber = 5;
    private long orientations_;
    /// <summary>
    ///Orientations 朝向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Orientations {
      get { return orientations_; }
      set {
        orientations_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestWaydata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestWaydata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Xaxis != other.Xaxis) return false;
      if (Yaxis != other.Yaxis) return false;
      if (Direction != other.Direction) return false;
      if (Orientations != other.Orientations) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Xaxis != 0L) hash ^= Xaxis.GetHashCode();
      if (Yaxis != 0L) hash ^= Yaxis.GetHashCode();
      if (Direction != false) hash ^= Direction.GetHashCode();
      if (Orientations != 0L) hash ^= Orientations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Xaxis != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Xaxis);
      }
      if (Yaxis != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Yaxis);
      }
      if (Direction != false) {
        output.WriteRawTag(32);
        output.WriteBool(Direction);
      }
      if (Orientations != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Orientations);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Xaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Xaxis);
      }
      if (Yaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Yaxis);
      }
      if (Direction != false) {
        size += 1 + 1;
      }
      if (Orientations != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Orientations);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestWaydata other) {
      if (other == null) {
        return;
      }
      if (other.Xaxis != 0L) {
        Xaxis = other.Xaxis;
      }
      if (other.Yaxis != 0L) {
        Yaxis = other.Yaxis;
      }
      if (other.Direction != false) {
        Direction = other.Direction;
      }
      if (other.Orientations != 0L) {
        Orientations = other.Orientations;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Xaxis = input.ReadInt64();
            break;
          }
          case 24: {
            Yaxis = input.ReadInt64();
            break;
          }
          case 32: {
            Direction = input.ReadBool();
            break;
          }
          case 40: {
            Orientations = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestRefreshDiceReq 刷新交通工具骰子
  /// </summary>
  public sealed partial class RequestRefreshDiceReq : pb::IMessage<RequestRefreshDiceReq> {
    private static readonly pb::MessageParser<RequestRefreshDiceReq> _parser = new pb::MessageParser<RequestRefreshDiceReq>(() => new RequestRefreshDiceReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestRefreshDiceReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRefreshDiceReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRefreshDiceReq(RequestRefreshDiceReq other) : this() {
      fktransportid_ = other.fktransportid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRefreshDiceReq Clone() {
      return new RequestRefreshDiceReq(this);
    }

    /// <summary>Field number for the "Fktransportid" field.</summary>
    public const int FktransportidFieldNumber = 1;
    private long fktransportid_;
    /// <summary>
    ///Fktransportid 交通工具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Fktransportid {
      get { return fktransportid_; }
      set {
        fktransportid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestRefreshDiceReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestRefreshDiceReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fktransportid != other.Fktransportid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fktransportid != 0L) hash ^= Fktransportid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fktransportid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Fktransportid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fktransportid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fktransportid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestRefreshDiceReq other) {
      if (other == null) {
        return;
      }
      if (other.Fktransportid != 0L) {
        Fktransportid = other.Fktransportid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Fktransportid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestWalletInfoRsp 用户钱包信息
  /// </summary>
  public sealed partial class RequestWalletInfoRsp : pb::IMessage<RequestWalletInfoRsp> {
    private static readonly pb::MessageParser<RequestWalletInfoRsp> _parser = new pb::MessageParser<RequestWalletInfoRsp>(() => new RequestWalletInfoRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestWalletInfoRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWalletInfoRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWalletInfoRsp(RequestWalletInfoRsp other) : this() {
      fkuuid_ = other.fkuuid_;
      diamond_ = other.diamond_;
      gold_ = other.gold_;
      updatedat_ = other.updatedat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWalletInfoRsp Clone() {
      return new RequestWalletInfoRsp(this);
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 1;
    private string fkuuid_ = "";
    /// <summary>
    ///Fkuuid 用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Diamond" field.</summary>
    public const int DiamondFieldNumber = 2;
    private long diamond_;
    /// <summary>
    ///Diamond 钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Diamond {
      get { return diamond_; }
      set {
        diamond_ = value;
      }
    }

    /// <summary>Field number for the "Gold" field.</summary>
    public const int GoldFieldNumber = 3;
    private long gold_;
    /// <summary>
    ///Gold 金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "Updatedat" field.</summary>
    public const int UpdatedatFieldNumber = 4;
    private string updatedat_ = "";
    /// <summary>
    ///Updatedat 修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Updatedat {
      get { return updatedat_; }
      set {
        updatedat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestWalletInfoRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestWalletInfoRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkuuid != other.Fkuuid) return false;
      if (Diamond != other.Diamond) return false;
      if (Gold != other.Gold) return false;
      if (Updatedat != other.Updatedat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Diamond != 0L) hash ^= Diamond.GetHashCode();
      if (Gold != 0L) hash ^= Gold.GetHashCode();
      if (Updatedat.Length != 0) hash ^= Updatedat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkuuid);
      }
      if (Diamond != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Diamond);
      }
      if (Gold != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Gold);
      }
      if (Updatedat.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Updatedat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Diamond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Diamond);
      }
      if (Gold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
      }
      if (Updatedat.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Updatedat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestWalletInfoRsp other) {
      if (other == null) {
        return;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Diamond != 0L) {
        Diamond = other.Diamond;
      }
      if (other.Gold != 0L) {
        Gold = other.Gold;
      }
      if (other.Updatedat.Length != 0) {
        Updatedat = other.Updatedat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkuuid = input.ReadString();
            break;
          }
          case 16: {
            Diamond = input.ReadInt64();
            break;
          }
          case 24: {
            Gold = input.ReadInt64();
            break;
          }
          case 34: {
            Updatedat = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///ChangeGoldReq 金币变动请求
  /// 执行gm指令
  /// </summary>
  public sealed partial class ChangeGoldReq : pb::IMessage<ChangeGoldReq> {
    private static readonly pb::MessageParser<ChangeGoldReq> _parser = new pb::MessageParser<ChangeGoldReq>(() => new ChangeGoldReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeGoldReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeGoldReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeGoldReq(ChangeGoldReq other) : this() {
      fkuuid_ = other.fkuuid_;
      reason_ = other.reason_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeGoldReq Clone() {
      return new ChangeGoldReq(this);
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 1;
    private string fkuuid_ = "";
    /// <summary>
    ///Fkuuid 用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private string reason_ = "";
    /// <summary>
    ///Reason 变动原因
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    /// <summary>
    ///Amount 变动数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeGoldReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeGoldReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkuuid != other.Fkuuid) return false;
      if (Reason != other.Reason) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkuuid);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeGoldReq other) {
      if (other == null) {
        return;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkuuid = input.ReadString();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///ChangeDiamondReq 钻石变动请求
  /// 执行gm指令
  /// </summary>
  public sealed partial class ChangeDiamondReq : pb::IMessage<ChangeDiamondReq> {
    private static readonly pb::MessageParser<ChangeDiamondReq> _parser = new pb::MessageParser<ChangeDiamondReq>(() => new ChangeDiamondReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeDiamondReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PuserReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDiamondReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDiamondReq(ChangeDiamondReq other) : this() {
      fkuuid_ = other.fkuuid_;
      reason_ = other.reason_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDiamondReq Clone() {
      return new ChangeDiamondReq(this);
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 1;
    private string fkuuid_ = "";
    /// <summary>
    ///Fkuuid 用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private string reason_ = "";
    /// <summary>
    ///Reason 变动原因
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    /// <summary>
    ///Amount 变动数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeDiamondReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeDiamondReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkuuid != other.Fkuuid) return false;
      if (Reason != other.Reason) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkuuid);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeDiamondReq other) {
      if (other == null) {
        return;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkuuid = input.ReadString();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
