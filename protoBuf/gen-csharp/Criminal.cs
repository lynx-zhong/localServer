// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: criminal.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from criminal.proto</summary>
  public static partial class CriminalReflection {

    #region Descriptor
    /// <summary>File descriptor for criminal.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CriminalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5jcmltaW5hbC5wcm90bxIFcHJvdG8iSgoSVXNlckNyaW1pbmFsT3BlcnRl",
            "Eg4KBkZrdXVpZBgBIAEoCRIQCghDcmltaW5hbBgCIAEoAxISCgpGa2NpdHlj",
            "b2RlGAMgASgJIi0KB0lkUXVlcnkSDgoGRmt1dWlkGAEgASgJEhIKCkZrY2l0",
            "eWNvZGUYAiABKAkiGgoYUmVxdWVzdEVuZE9mRGV0ZW50aW9uUmVzIucCChBV",
            "c2VyQ3JpbWluYWxyb2xlEgoKAklkGAEgASgDEg4KBkZrdXVpZBgCIAEoCRIM",
            "CgROYW1lGBggASgJEgsKA1NleBgaIAEoAxISCgpGa2NpdHljb2RlGAMgASgJ",
            "EhIKCkZrY2l0eW5hbWUYBCABKAkSFwoPRmtiaXJ0aGNpdHljb2RlGAUgASgJ",
            "EhcKD0ZrYmlydGhjaXR5bmFtZRgGIAEoCRIQCghDcmltaW5hbBgHIAEoAxIT",
            "CgtNYXhDcmltaW5hbBgIIAEoAxIXCg9NYXhDcmltaW5hbFZsdWUYCSABKAMS",
            "DAoEU3RhchgKIAEoAxIWCg5QdW5pc2htZW50VGltZRgLIAEoAxIXCg9QdW5p",
            "c2htZW50UHJpY2UYDCABKAMSDgoGU3RhdHVzGBkgASgDEg0KBUV4dHJhGA4g",
            "ASgJEhEKCUNyZWF0ZWRhdBgWIAEoCRIRCglVcGRhdGVkYXQYFyABKAkibAoW",
            "UmVxdWVzdENyaW1pbmFsSW5mb1JzcBInCgZXYW50ZWQYASADKAsyFy5wcm90",
            "by5Vc2VyQ3JpbWluYWxyb2xlEikKCENhdWdodGVkGAIgAygLMhcucHJvdG8u",
            "VXNlckNyaW1pbmFscm9sZSIhCgREYXRhEgoKAklkGAEgASgDEg0KBVZhbHVl",
            "GAIgASgDInoKClBvbGljZURhdGESDgoGRmt1dWlkGAEgASgJEhUKDUZrdHJh",
            "bnNwb3J0aWQYBCABKAMSDQoFWGF4aXMYAiABKAMSDQoFWWF4aXMYAyABKAMS",
            "FAoMT3JpZW50YXRpb25zGAYgASgDEhEKCVJlbWFpbk51bRgHIAEoAyJeCg5Q",
            "b2xpY2VXYWxrSW5mbxIOCgZGa3V1aWQYASABKAkSFQoNRmt0cmFuc3BvcnRp",
            "ZBgCIAEoAxIlCgdXYXlkYXRhGAkgAygLMhQucHJvdG8uUG9saWNlV2F5ZGF0",
            "YSKVAQoOTGluZVBvbGljZWluZm8SDgoGRmt1dWlkGAEgASgJEg0KBVhheGlz",
            "GAIgASgDEg0KBVlheGlzGAMgASgDEhQKDE9yaWVudGF0aW9ucxgEIAEoAxIR",
            "CglSZW1haW5OdW0YBSABKAMSFQoNR2l2ZVVwUmVjbGFtYRgGIAEoCBIVCg1G",
            "a3RyYW5zcG9ydGlkGAcgASgDImYKGVJlcXVlc3RQb2xpY2VPcGVyYXRpb25S",
            "ZXMSJgoLSW5jcmVtZW50YWwYASADKAsyES5wcm90by5Qb2xpY2VEYXRhEiEK",
            "BlJlZHVjZRgCIAMoCzIRLnByb3RvLlBvbGljZURhdGEiOwoUUmVxdWVzdFBv",
            "bGljZVdhbGtSZXMSIwoEZGF0YRgBIAMoCzIVLnByb3RvLlBvbGljZVdhbGtJ",
            "bmZvIpkBCg1Qb2xpY2VXYXlkYXRhEg4KBkZrdXVpZBgBIAEoCRIQCghDcmlt",
            "aW5hbBgHIAEoAxIMCgRTdGFyGAYgASgDEg0KBVhheGlzGAIgASgDEg0KBVlh",
            "eGlzGAMgASgDEhEKCURpcmVjdGlvbhgEIAEoCBIUCgxPcmllbnRhdGlvbnMY",
            "BSABKAMSEQoJUmVtYWluTnVtGAggASgDIsIBChZSZXF1ZXN0UG9saWNlVmVy",
            "aWZ5UmVzEhAKCENhdWdodGVkGAEgASgIEg4KBkZrdXVpZBgCIAEoCRIUCgxC",
            "dWlsZGluZ0NvZGUYAyABKAMSDQoFWGF4aXMYBCABKAMSDQoFWWF4aXMYBSAB",
            "KAMSFAoMT3JpZW50YXRpb25zGAYgASgDEhYKDlB1bmlzaG1lbnRUaW1lGAsg",
            "ASgDEiQKD1B1bmlzaG1lbnRQcmljZRgMIAEoCzILLnByb3RvLkRhdGEihgEK",
            "FlJlcXVlc3RQb2xpY2VWZXJpZnlSZXESEgoKRmtjaXR5Y29kZRgGIAEoCRIO",
            "CgZGa3V1aWQYASABKAkSDQoFWGF4aXMYAiABKAMSDQoFWWF4aXMYAyABKAMS",
            "FAoMT3JpZW50YXRpb25zGAUgASgDEhQKDFBvbGljZUZrdXVpZBgEIAEoCWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.UserCriminalOperte), global::Proto.UserCriminalOperte.Parser, new[]{ "Fkuuid", "Criminal", "Fkcitycode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.IdQuery), global::Proto.IdQuery.Parser, new[]{ "Fkuuid", "Fkcitycode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestEndOfDetentionRes), global::Proto.RequestEndOfDetentionRes.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.UserCriminalrole), global::Proto.UserCriminalrole.Parser, new[]{ "Id", "Fkuuid", "Name", "Sex", "Fkcitycode", "Fkcityname", "Fkbirthcitycode", "Fkbirthcityname", "Criminal", "MaxCriminal", "MaxCriminalVlue", "Star", "PunishmentTime", "PunishmentPrice", "Status", "Extra", "Createdat", "Updatedat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestCriminalInfoRsp), global::Proto.RequestCriminalInfoRsp.Parser, new[]{ "Wanted", "Caughted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Data), global::Proto.Data.Parser, new[]{ "Id", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PoliceData), global::Proto.PoliceData.Parser, new[]{ "Fkuuid", "Fktransportid", "Xaxis", "Yaxis", "Orientations", "RemainNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PoliceWalkInfo), global::Proto.PoliceWalkInfo.Parser, new[]{ "Fkuuid", "Fktransportid", "Waydata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.LinePoliceinfo), global::Proto.LinePoliceinfo.Parser, new[]{ "Fkuuid", "Xaxis", "Yaxis", "Orientations", "RemainNum", "GiveUpReclama", "Fktransportid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestPoliceOperationRes), global::Proto.RequestPoliceOperationRes.Parser, new[]{ "Incremental", "Reduce" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestPoliceWalkRes), global::Proto.RequestPoliceWalkRes.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PoliceWaydata), global::Proto.PoliceWaydata.Parser, new[]{ "Fkuuid", "Criminal", "Star", "Xaxis", "Yaxis", "Direction", "Orientations", "RemainNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestPoliceVerifyRes), global::Proto.RequestPoliceVerifyRes.Parser, new[]{ "Caughted", "Fkuuid", "BuildingCode", "Xaxis", "Yaxis", "Orientations", "PunishmentTime", "PunishmentPrice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestPoliceVerifyReq), global::Proto.RequestPoliceVerifyReq.Parser, new[]{ "Fkcitycode", "Fkuuid", "Xaxis", "Yaxis", "Orientations", "PoliceFkuuid" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UserCriminalOperte : pb::IMessage<UserCriminalOperte> {
    private static readonly pb::MessageParser<UserCriminalOperte> _parser = new pb::MessageParser<UserCriminalOperte>(() => new UserCriminalOperte());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserCriminalOperte> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCriminalOperte() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCriminalOperte(UserCriminalOperte other) : this() {
      fkuuid_ = other.fkuuid_;
      criminal_ = other.criminal_;
      fkcitycode_ = other.fkcitycode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCriminalOperte Clone() {
      return new UserCriminalOperte(this);
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 1;
    private string fkuuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Criminal" field.</summary>
    public const int CriminalFieldNumber = 2;
    private long criminal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Criminal {
      get { return criminal_; }
      set {
        criminal_ = value;
      }
    }

    /// <summary>Field number for the "Fkcitycode" field.</summary>
    public const int FkcitycodeFieldNumber = 3;
    private string fkcitycode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkcitycode {
      get { return fkcitycode_; }
      set {
        fkcitycode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserCriminalOperte);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserCriminalOperte other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkuuid != other.Fkuuid) return false;
      if (Criminal != other.Criminal) return false;
      if (Fkcitycode != other.Fkcitycode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Criminal != 0L) hash ^= Criminal.GetHashCode();
      if (Fkcitycode.Length != 0) hash ^= Fkcitycode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkuuid);
      }
      if (Criminal != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Criminal);
      }
      if (Fkcitycode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Fkcitycode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Criminal != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Criminal);
      }
      if (Fkcitycode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkcitycode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserCriminalOperte other) {
      if (other == null) {
        return;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Criminal != 0L) {
        Criminal = other.Criminal;
      }
      if (other.Fkcitycode.Length != 0) {
        Fkcitycode = other.Fkcitycode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkuuid = input.ReadString();
            break;
          }
          case 16: {
            Criminal = input.ReadInt64();
            break;
          }
          case 26: {
            Fkcitycode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 通过id查询
  /// </summary>
  public sealed partial class IdQuery : pb::IMessage<IdQuery> {
    private static readonly pb::MessageParser<IdQuery> _parser = new pb::MessageParser<IdQuery>(() => new IdQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdQuery(IdQuery other) : this() {
      fkuuid_ = other.fkuuid_;
      fkcitycode_ = other.fkcitycode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdQuery Clone() {
      return new IdQuery(this);
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 1;
    private string fkuuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fkcitycode" field.</summary>
    public const int FkcitycodeFieldNumber = 2;
    private string fkcitycode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkcitycode {
      get { return fkcitycode_; }
      set {
        fkcitycode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkuuid != other.Fkuuid) return false;
      if (Fkcitycode != other.Fkcitycode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Fkcitycode.Length != 0) hash ^= Fkcitycode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkuuid);
      }
      if (Fkcitycode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fkcitycode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Fkcitycode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkcitycode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdQuery other) {
      if (other == null) {
        return;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Fkcitycode.Length != 0) {
        Fkcitycode = other.Fkcitycode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkuuid = input.ReadString();
            break;
          }
          case 18: {
            Fkcitycode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 拘留结束
  /// </summary>
  public sealed partial class RequestEndOfDetentionRes : pb::IMessage<RequestEndOfDetentionRes> {
    private static readonly pb::MessageParser<RequestEndOfDetentionRes> _parser = new pb::MessageParser<RequestEndOfDetentionRes>(() => new RequestEndOfDetentionRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestEndOfDetentionRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestEndOfDetentionRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestEndOfDetentionRes(RequestEndOfDetentionRes other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestEndOfDetentionRes Clone() {
      return new RequestEndOfDetentionRes(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestEndOfDetentionRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestEndOfDetentionRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestEndOfDetentionRes other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class UserCriminalrole : pb::IMessage<UserCriminalrole> {
    private static readonly pb::MessageParser<UserCriminalrole> _parser = new pb::MessageParser<UserCriminalrole>(() => new UserCriminalrole());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserCriminalrole> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCriminalrole() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCriminalrole(UserCriminalrole other) : this() {
      id_ = other.id_;
      fkuuid_ = other.fkuuid_;
      name_ = other.name_;
      sex_ = other.sex_;
      fkcitycode_ = other.fkcitycode_;
      fkcityname_ = other.fkcityname_;
      fkbirthcitycode_ = other.fkbirthcitycode_;
      fkbirthcityname_ = other.fkbirthcityname_;
      criminal_ = other.criminal_;
      maxCriminal_ = other.maxCriminal_;
      maxCriminalVlue_ = other.maxCriminalVlue_;
      star_ = other.star_;
      punishmentTime_ = other.punishmentTime_;
      punishmentPrice_ = other.punishmentPrice_;
      status_ = other.status_;
      extra_ = other.extra_;
      createdat_ = other.createdat_;
      updatedat_ = other.updatedat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCriminalrole Clone() {
      return new UserCriminalrole(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    /// 基本属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 2;
    private string fkuuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 24;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sex" field.</summary>
    public const int SexFieldNumber = 26;
    private long sex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "Fkcitycode" field.</summary>
    public const int FkcitycodeFieldNumber = 3;
    private string fkcitycode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkcitycode {
      get { return fkcitycode_; }
      set {
        fkcitycode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fkcityname" field.</summary>
    public const int FkcitynameFieldNumber = 4;
    private string fkcityname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkcityname {
      get { return fkcityname_; }
      set {
        fkcityname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fkbirthcitycode" field.</summary>
    public const int FkbirthcitycodeFieldNumber = 5;
    private string fkbirthcitycode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkbirthcitycode {
      get { return fkbirthcitycode_; }
      set {
        fkbirthcitycode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fkbirthcityname" field.</summary>
    public const int FkbirthcitynameFieldNumber = 6;
    private string fkbirthcityname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkbirthcityname {
      get { return fkbirthcityname_; }
      set {
        fkbirthcityname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Criminal" field.</summary>
    public const int CriminalFieldNumber = 7;
    private long criminal_;
    /// <summary>
    /// 犯罪信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Criminal {
      get { return criminal_; }
      set {
        criminal_ = value;
      }
    }

    /// <summary>Field number for the "MaxCriminal" field.</summary>
    public const int MaxCriminalFieldNumber = 8;
    private long maxCriminal_;
    /// <summary>
    /// 犯罪类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxCriminal {
      get { return maxCriminal_; }
      set {
        maxCriminal_ = value;
      }
    }

    /// <summary>Field number for the "MaxCriminalVlue" field.</summary>
    public const int MaxCriminalVlueFieldNumber = 9;
    private long maxCriminalVlue_;
    /// <summary>
    /// 犯罪类型得犯罪值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxCriminalVlue {
      get { return maxCriminalVlue_; }
      set {
        maxCriminalVlue_ = value;
      }
    }

    /// <summary>Field number for the "Star" field.</summary>
    public const int StarFieldNumber = 10;
    private long star_;
    /// <summary>
    /// 犯罪星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    /// <summary>Field number for the "PunishmentTime" field.</summary>
    public const int PunishmentTimeFieldNumber = 11;
    private long punishmentTime_;
    /// <summary>
    /// 拘留时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PunishmentTime {
      get { return punishmentTime_; }
      set {
        punishmentTime_ = value;
      }
    }

    /// <summary>Field number for the "PunishmentPrice" field.</summary>
    public const int PunishmentPriceFieldNumber = 12;
    private long punishmentPrice_;
    /// <summary>
    /// 罚款
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PunishmentPrice {
      get { return punishmentPrice_; }
      set {
        punishmentPrice_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 25;
    private long status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Extra" field.</summary>
    public const int ExtraFieldNumber = 14;
    private string extra_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Extra {
      get { return extra_; }
      set {
        extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Createdat" field.</summary>
    public const int CreatedatFieldNumber = 22;
    private string createdat_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Createdat {
      get { return createdat_; }
      set {
        createdat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Updatedat" field.</summary>
    public const int UpdatedatFieldNumber = 23;
    private string updatedat_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Updatedat {
      get { return updatedat_; }
      set {
        updatedat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserCriminalrole);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserCriminalrole other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Fkuuid != other.Fkuuid) return false;
      if (Name != other.Name) return false;
      if (Sex != other.Sex) return false;
      if (Fkcitycode != other.Fkcitycode) return false;
      if (Fkcityname != other.Fkcityname) return false;
      if (Fkbirthcitycode != other.Fkbirthcitycode) return false;
      if (Fkbirthcityname != other.Fkbirthcityname) return false;
      if (Criminal != other.Criminal) return false;
      if (MaxCriminal != other.MaxCriminal) return false;
      if (MaxCriminalVlue != other.MaxCriminalVlue) return false;
      if (Star != other.Star) return false;
      if (PunishmentTime != other.PunishmentTime) return false;
      if (PunishmentPrice != other.PunishmentPrice) return false;
      if (Status != other.Status) return false;
      if (Extra != other.Extra) return false;
      if (Createdat != other.Createdat) return false;
      if (Updatedat != other.Updatedat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Sex != 0L) hash ^= Sex.GetHashCode();
      if (Fkcitycode.Length != 0) hash ^= Fkcitycode.GetHashCode();
      if (Fkcityname.Length != 0) hash ^= Fkcityname.GetHashCode();
      if (Fkbirthcitycode.Length != 0) hash ^= Fkbirthcitycode.GetHashCode();
      if (Fkbirthcityname.Length != 0) hash ^= Fkbirthcityname.GetHashCode();
      if (Criminal != 0L) hash ^= Criminal.GetHashCode();
      if (MaxCriminal != 0L) hash ^= MaxCriminal.GetHashCode();
      if (MaxCriminalVlue != 0L) hash ^= MaxCriminalVlue.GetHashCode();
      if (Star != 0L) hash ^= Star.GetHashCode();
      if (PunishmentTime != 0L) hash ^= PunishmentTime.GetHashCode();
      if (PunishmentPrice != 0L) hash ^= PunishmentPrice.GetHashCode();
      if (Status != 0L) hash ^= Status.GetHashCode();
      if (Extra.Length != 0) hash ^= Extra.GetHashCode();
      if (Createdat.Length != 0) hash ^= Createdat.GetHashCode();
      if (Updatedat.Length != 0) hash ^= Updatedat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fkuuid);
      }
      if (Fkcitycode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Fkcitycode);
      }
      if (Fkcityname.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Fkcityname);
      }
      if (Fkbirthcitycode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Fkbirthcitycode);
      }
      if (Fkbirthcityname.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Fkbirthcityname);
      }
      if (Criminal != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Criminal);
      }
      if (MaxCriminal != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MaxCriminal);
      }
      if (MaxCriminalVlue != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MaxCriminalVlue);
      }
      if (Star != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(Star);
      }
      if (PunishmentTime != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(PunishmentTime);
      }
      if (PunishmentPrice != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(PunishmentPrice);
      }
      if (Extra.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Extra);
      }
      if (Createdat.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Createdat);
      }
      if (Updatedat.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Updatedat);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(Name);
      }
      if (Status != 0L) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(Status);
      }
      if (Sex != 0L) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(Sex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Name.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Sex != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Sex);
      }
      if (Fkcitycode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkcitycode);
      }
      if (Fkcityname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkcityname);
      }
      if (Fkbirthcitycode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkbirthcitycode);
      }
      if (Fkbirthcityname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkbirthcityname);
      }
      if (Criminal != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Criminal);
      }
      if (MaxCriminal != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxCriminal);
      }
      if (MaxCriminalVlue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxCriminalVlue);
      }
      if (Star != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Star);
      }
      if (PunishmentTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PunishmentTime);
      }
      if (PunishmentPrice != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PunishmentPrice);
      }
      if (Status != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Status);
      }
      if (Extra.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
      }
      if (Createdat.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Createdat);
      }
      if (Updatedat.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Updatedat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserCriminalrole other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Sex != 0L) {
        Sex = other.Sex;
      }
      if (other.Fkcitycode.Length != 0) {
        Fkcitycode = other.Fkcitycode;
      }
      if (other.Fkcityname.Length != 0) {
        Fkcityname = other.Fkcityname;
      }
      if (other.Fkbirthcitycode.Length != 0) {
        Fkbirthcitycode = other.Fkbirthcitycode;
      }
      if (other.Fkbirthcityname.Length != 0) {
        Fkbirthcityname = other.Fkbirthcityname;
      }
      if (other.Criminal != 0L) {
        Criminal = other.Criminal;
      }
      if (other.MaxCriminal != 0L) {
        MaxCriminal = other.MaxCriminal;
      }
      if (other.MaxCriminalVlue != 0L) {
        MaxCriminalVlue = other.MaxCriminalVlue;
      }
      if (other.Star != 0L) {
        Star = other.Star;
      }
      if (other.PunishmentTime != 0L) {
        PunishmentTime = other.PunishmentTime;
      }
      if (other.PunishmentPrice != 0L) {
        PunishmentPrice = other.PunishmentPrice;
      }
      if (other.Status != 0L) {
        Status = other.Status;
      }
      if (other.Extra.Length != 0) {
        Extra = other.Extra;
      }
      if (other.Createdat.Length != 0) {
        Createdat = other.Createdat;
      }
      if (other.Updatedat.Length != 0) {
        Updatedat = other.Updatedat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Fkuuid = input.ReadString();
            break;
          }
          case 26: {
            Fkcitycode = input.ReadString();
            break;
          }
          case 34: {
            Fkcityname = input.ReadString();
            break;
          }
          case 42: {
            Fkbirthcitycode = input.ReadString();
            break;
          }
          case 50: {
            Fkbirthcityname = input.ReadString();
            break;
          }
          case 56: {
            Criminal = input.ReadInt64();
            break;
          }
          case 64: {
            MaxCriminal = input.ReadInt64();
            break;
          }
          case 72: {
            MaxCriminalVlue = input.ReadInt64();
            break;
          }
          case 80: {
            Star = input.ReadInt64();
            break;
          }
          case 88: {
            PunishmentTime = input.ReadInt64();
            break;
          }
          case 96: {
            PunishmentPrice = input.ReadInt64();
            break;
          }
          case 114: {
            Extra = input.ReadString();
            break;
          }
          case 178: {
            Createdat = input.ReadString();
            break;
          }
          case 186: {
            Updatedat = input.ReadString();
            break;
          }
          case 194: {
            Name = input.ReadString();
            break;
          }
          case 200: {
            Status = input.ReadInt64();
            break;
          }
          case 208: {
            Sex = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 警察信息
  /// </summary>
  public sealed partial class RequestCriminalInfoRsp : pb::IMessage<RequestCriminalInfoRsp> {
    private static readonly pb::MessageParser<RequestCriminalInfoRsp> _parser = new pb::MessageParser<RequestCriminalInfoRsp>(() => new RequestCriminalInfoRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestCriminalInfoRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCriminalInfoRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCriminalInfoRsp(RequestCriminalInfoRsp other) : this() {
      wanted_ = other.wanted_.Clone();
      caughted_ = other.caughted_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCriminalInfoRsp Clone() {
      return new RequestCriminalInfoRsp(this);
    }

    /// <summary>Field number for the "Wanted" field.</summary>
    public const int WantedFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.UserCriminalrole> _repeated_wanted_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.UserCriminalrole.Parser);
    private readonly pbc::RepeatedField<global::Proto.UserCriminalrole> wanted_ = new pbc::RepeatedField<global::Proto.UserCriminalrole>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.UserCriminalrole> Wanted {
      get { return wanted_; }
    }

    /// <summary>Field number for the "Caughted" field.</summary>
    public const int CaughtedFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto.UserCriminalrole> _repeated_caughted_codec
        = pb::FieldCodec.ForMessage(18, global::Proto.UserCriminalrole.Parser);
    private readonly pbc::RepeatedField<global::Proto.UserCriminalrole> caughted_ = new pbc::RepeatedField<global::Proto.UserCriminalrole>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.UserCriminalrole> Caughted {
      get { return caughted_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestCriminalInfoRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestCriminalInfoRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!wanted_.Equals(other.wanted_)) return false;
      if(!caughted_.Equals(other.caughted_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= wanted_.GetHashCode();
      hash ^= caughted_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      wanted_.WriteTo(output, _repeated_wanted_codec);
      caughted_.WriteTo(output, _repeated_caughted_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += wanted_.CalculateSize(_repeated_wanted_codec);
      size += caughted_.CalculateSize(_repeated_caughted_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestCriminalInfoRsp other) {
      if (other == null) {
        return;
      }
      wanted_.Add(other.wanted_);
      caughted_.Add(other.caughted_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            wanted_.AddEntriesFrom(input, _repeated_wanted_codec);
            break;
          }
          case 18: {
            caughted_.AddEntriesFrom(input, _repeated_caughted_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 警察信息
  /// </summary>
  public sealed partial class Data : pb::IMessage<Data> {
    private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data(Data other) : this() {
      id_ = other.id_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data Clone() {
      return new Data(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    /// 警察id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private long value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Value != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Data other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Value = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 警察信息
  /// </summary>
  public sealed partial class PoliceData : pb::IMessage<PoliceData> {
    private static readonly pb::MessageParser<PoliceData> _parser = new pb::MessageParser<PoliceData>(() => new PoliceData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PoliceData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoliceData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoliceData(PoliceData other) : this() {
      fkuuid_ = other.fkuuid_;
      fktransportid_ = other.fktransportid_;
      xaxis_ = other.xaxis_;
      yaxis_ = other.yaxis_;
      orientations_ = other.orientations_;
      remainNum_ = other.remainNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoliceData Clone() {
      return new PoliceData(this);
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 1;
    private string fkuuid_ = "";
    /// <summary>
    /// 警察id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fktransportid" field.</summary>
    public const int FktransportidFieldNumber = 4;
    private long fktransportid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Fktransportid {
      get { return fktransportid_; }
      set {
        fktransportid_ = value;
      }
    }

    /// <summary>Field number for the "Xaxis" field.</summary>
    public const int XaxisFieldNumber = 2;
    private long xaxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Xaxis {
      get { return xaxis_; }
      set {
        xaxis_ = value;
      }
    }

    /// <summary>Field number for the "Yaxis" field.</summary>
    public const int YaxisFieldNumber = 3;
    private long yaxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Yaxis {
      get { return yaxis_; }
      set {
        yaxis_ = value;
      }
    }

    /// <summary>Field number for the "Orientations" field.</summary>
    public const int OrientationsFieldNumber = 6;
    private long orientations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Orientations {
      get { return orientations_; }
      set {
        orientations_ = value;
      }
    }

    /// <summary>Field number for the "RemainNum" field.</summary>
    public const int RemainNumFieldNumber = 7;
    private long remainNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RemainNum {
      get { return remainNum_; }
      set {
        remainNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PoliceData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PoliceData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkuuid != other.Fkuuid) return false;
      if (Fktransportid != other.Fktransportid) return false;
      if (Xaxis != other.Xaxis) return false;
      if (Yaxis != other.Yaxis) return false;
      if (Orientations != other.Orientations) return false;
      if (RemainNum != other.RemainNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Fktransportid != 0L) hash ^= Fktransportid.GetHashCode();
      if (Xaxis != 0L) hash ^= Xaxis.GetHashCode();
      if (Yaxis != 0L) hash ^= Yaxis.GetHashCode();
      if (Orientations != 0L) hash ^= Orientations.GetHashCode();
      if (RemainNum != 0L) hash ^= RemainNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkuuid);
      }
      if (Xaxis != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Xaxis);
      }
      if (Yaxis != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Yaxis);
      }
      if (Fktransportid != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Fktransportid);
      }
      if (Orientations != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Orientations);
      }
      if (RemainNum != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(RemainNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Fktransportid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fktransportid);
      }
      if (Xaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Xaxis);
      }
      if (Yaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Yaxis);
      }
      if (Orientations != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Orientations);
      }
      if (RemainNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RemainNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PoliceData other) {
      if (other == null) {
        return;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Fktransportid != 0L) {
        Fktransportid = other.Fktransportid;
      }
      if (other.Xaxis != 0L) {
        Xaxis = other.Xaxis;
      }
      if (other.Yaxis != 0L) {
        Yaxis = other.Yaxis;
      }
      if (other.Orientations != 0L) {
        Orientations = other.Orientations;
      }
      if (other.RemainNum != 0L) {
        RemainNum = other.RemainNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkuuid = input.ReadString();
            break;
          }
          case 16: {
            Xaxis = input.ReadInt64();
            break;
          }
          case 24: {
            Yaxis = input.ReadInt64();
            break;
          }
          case 32: {
            Fktransportid = input.ReadInt64();
            break;
          }
          case 48: {
            Orientations = input.ReadInt64();
            break;
          }
          case 56: {
            RemainNum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PoliceWalkInfo : pb::IMessage<PoliceWalkInfo> {
    private static readonly pb::MessageParser<PoliceWalkInfo> _parser = new pb::MessageParser<PoliceWalkInfo>(() => new PoliceWalkInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PoliceWalkInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoliceWalkInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoliceWalkInfo(PoliceWalkInfo other) : this() {
      fkuuid_ = other.fkuuid_;
      fktransportid_ = other.fktransportid_;
      waydata_ = other.waydata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoliceWalkInfo Clone() {
      return new PoliceWalkInfo(this);
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 1;
    private string fkuuid_ = "";
    /// <summary>
    /// 警察id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fktransportid" field.</summary>
    public const int FktransportidFieldNumber = 2;
    private long fktransportid_;
    /// <summary>
    /// 交通工具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Fktransportid {
      get { return fktransportid_; }
      set {
        fktransportid_ = value;
      }
    }

    /// <summary>Field number for the "Waydata" field.</summary>
    public const int WaydataFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Proto.PoliceWaydata> _repeated_waydata_codec
        = pb::FieldCodec.ForMessage(74, global::Proto.PoliceWaydata.Parser);
    private readonly pbc::RepeatedField<global::Proto.PoliceWaydata> waydata_ = new pbc::RepeatedField<global::Proto.PoliceWaydata>();
    /// <summary>
    /// 基本属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PoliceWaydata> Waydata {
      get { return waydata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PoliceWalkInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PoliceWalkInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkuuid != other.Fkuuid) return false;
      if (Fktransportid != other.Fktransportid) return false;
      if(!waydata_.Equals(other.waydata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Fktransportid != 0L) hash ^= Fktransportid.GetHashCode();
      hash ^= waydata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkuuid);
      }
      if (Fktransportid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Fktransportid);
      }
      waydata_.WriteTo(output, _repeated_waydata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Fktransportid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fktransportid);
      }
      size += waydata_.CalculateSize(_repeated_waydata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PoliceWalkInfo other) {
      if (other == null) {
        return;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Fktransportid != 0L) {
        Fktransportid = other.Fktransportid;
      }
      waydata_.Add(other.waydata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkuuid = input.ReadString();
            break;
          }
          case 16: {
            Fktransportid = input.ReadInt64();
            break;
          }
          case 74: {
            waydata_.AddEntriesFrom(input, _repeated_waydata_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///LinePoliceinfo 该条线上用户信息
  /// </summary>
  public sealed partial class LinePoliceinfo : pb::IMessage<LinePoliceinfo> {
    private static readonly pb::MessageParser<LinePoliceinfo> _parser = new pb::MessageParser<LinePoliceinfo>(() => new LinePoliceinfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LinePoliceinfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinePoliceinfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinePoliceinfo(LinePoliceinfo other) : this() {
      fkuuid_ = other.fkuuid_;
      xaxis_ = other.xaxis_;
      yaxis_ = other.yaxis_;
      orientations_ = other.orientations_;
      remainNum_ = other.remainNum_;
      giveUpReclama_ = other.giveUpReclama_;
      fktransportid_ = other.fktransportid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinePoliceinfo Clone() {
      return new LinePoliceinfo(this);
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 1;
    private string fkuuid_ = "";
    /// <summary>
    /// 警察id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Xaxis" field.</summary>
    public const int XaxisFieldNumber = 2;
    private long xaxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Xaxis {
      get { return xaxis_; }
      set {
        xaxis_ = value;
      }
    }

    /// <summary>Field number for the "Yaxis" field.</summary>
    public const int YaxisFieldNumber = 3;
    private long yaxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Yaxis {
      get { return yaxis_; }
      set {
        yaxis_ = value;
      }
    }

    /// <summary>Field number for the "Orientations" field.</summary>
    public const int OrientationsFieldNumber = 4;
    private long orientations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Orientations {
      get { return orientations_; }
      set {
        orientations_ = value;
      }
    }

    /// <summary>Field number for the "RemainNum" field.</summary>
    public const int RemainNumFieldNumber = 5;
    private long remainNum_;
    /// <summary>
    ///RemainNum 剩余步数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RemainNum {
      get { return remainNum_; }
      set {
        remainNum_ = value;
      }
    }

    /// <summary>Field number for the "GiveUpReclama" field.</summary>
    public const int GiveUpReclamaFieldNumber = 6;
    private bool giveUpReclama_;
    /// <summary>
    ///GiveUpReclama
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GiveUpReclama {
      get { return giveUpReclama_; }
      set {
        giveUpReclama_ = value;
      }
    }

    /// <summary>Field number for the "Fktransportid" field.</summary>
    public const int FktransportidFieldNumber = 7;
    private long fktransportid_;
    /// <summary>
    ///Fktransportid 使用的交通ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Fktransportid {
      get { return fktransportid_; }
      set {
        fktransportid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LinePoliceinfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LinePoliceinfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkuuid != other.Fkuuid) return false;
      if (Xaxis != other.Xaxis) return false;
      if (Yaxis != other.Yaxis) return false;
      if (Orientations != other.Orientations) return false;
      if (RemainNum != other.RemainNum) return false;
      if (GiveUpReclama != other.GiveUpReclama) return false;
      if (Fktransportid != other.Fktransportid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Xaxis != 0L) hash ^= Xaxis.GetHashCode();
      if (Yaxis != 0L) hash ^= Yaxis.GetHashCode();
      if (Orientations != 0L) hash ^= Orientations.GetHashCode();
      if (RemainNum != 0L) hash ^= RemainNum.GetHashCode();
      if (GiveUpReclama != false) hash ^= GiveUpReclama.GetHashCode();
      if (Fktransportid != 0L) hash ^= Fktransportid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkuuid);
      }
      if (Xaxis != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Xaxis);
      }
      if (Yaxis != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Yaxis);
      }
      if (Orientations != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Orientations);
      }
      if (RemainNum != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RemainNum);
      }
      if (GiveUpReclama != false) {
        output.WriteRawTag(48);
        output.WriteBool(GiveUpReclama);
      }
      if (Fktransportid != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Fktransportid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Xaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Xaxis);
      }
      if (Yaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Yaxis);
      }
      if (Orientations != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Orientations);
      }
      if (RemainNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RemainNum);
      }
      if (GiveUpReclama != false) {
        size += 1 + 1;
      }
      if (Fktransportid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fktransportid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LinePoliceinfo other) {
      if (other == null) {
        return;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Xaxis != 0L) {
        Xaxis = other.Xaxis;
      }
      if (other.Yaxis != 0L) {
        Yaxis = other.Yaxis;
      }
      if (other.Orientations != 0L) {
        Orientations = other.Orientations;
      }
      if (other.RemainNum != 0L) {
        RemainNum = other.RemainNum;
      }
      if (other.GiveUpReclama != false) {
        GiveUpReclama = other.GiveUpReclama;
      }
      if (other.Fktransportid != 0L) {
        Fktransportid = other.Fktransportid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkuuid = input.ReadString();
            break;
          }
          case 16: {
            Xaxis = input.ReadInt64();
            break;
          }
          case 24: {
            Yaxis = input.ReadInt64();
            break;
          }
          case 32: {
            Orientations = input.ReadInt64();
            break;
          }
          case 40: {
            RemainNum = input.ReadInt64();
            break;
          }
          case 48: {
            GiveUpReclama = input.ReadBool();
            break;
          }
          case 56: {
            Fktransportid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 增加警察或者减少警察
  /// </summary>
  public sealed partial class RequestPoliceOperationRes : pb::IMessage<RequestPoliceOperationRes> {
    private static readonly pb::MessageParser<RequestPoliceOperationRes> _parser = new pb::MessageParser<RequestPoliceOperationRes>(() => new RequestPoliceOperationRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestPoliceOperationRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceOperationRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceOperationRes(RequestPoliceOperationRes other) : this() {
      incremental_ = other.incremental_.Clone();
      reduce_ = other.reduce_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceOperationRes Clone() {
      return new RequestPoliceOperationRes(this);
    }

    /// <summary>Field number for the "Incremental" field.</summary>
    public const int IncrementalFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.PoliceData> _repeated_incremental_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.PoliceData.Parser);
    private readonly pbc::RepeatedField<global::Proto.PoliceData> incremental_ = new pbc::RepeatedField<global::Proto.PoliceData>();
    /// <summary>
    /// 增加的警察
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PoliceData> Incremental {
      get { return incremental_; }
    }

    /// <summary>Field number for the "Reduce" field.</summary>
    public const int ReduceFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto.PoliceData> _repeated_reduce_codec
        = pb::FieldCodec.ForMessage(18, global::Proto.PoliceData.Parser);
    private readonly pbc::RepeatedField<global::Proto.PoliceData> reduce_ = new pbc::RepeatedField<global::Proto.PoliceData>();
    /// <summary>
    /// 删除警察
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PoliceData> Reduce {
      get { return reduce_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestPoliceOperationRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestPoliceOperationRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!incremental_.Equals(other.incremental_)) return false;
      if(!reduce_.Equals(other.reduce_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= incremental_.GetHashCode();
      hash ^= reduce_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      incremental_.WriteTo(output, _repeated_incremental_codec);
      reduce_.WriteTo(output, _repeated_reduce_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += incremental_.CalculateSize(_repeated_incremental_codec);
      size += reduce_.CalculateSize(_repeated_reduce_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestPoliceOperationRes other) {
      if (other == null) {
        return;
      }
      incremental_.Add(other.incremental_);
      reduce_.Add(other.reduce_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            incremental_.AddEntriesFrom(input, _repeated_incremental_codec);
            break;
          }
          case 18: {
            reduce_.AddEntriesFrom(input, _repeated_reduce_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 警察行走
  /// </summary>
  public sealed partial class RequestPoliceWalkRes : pb::IMessage<RequestPoliceWalkRes> {
    private static readonly pb::MessageParser<RequestPoliceWalkRes> _parser = new pb::MessageParser<RequestPoliceWalkRes>(() => new RequestPoliceWalkRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestPoliceWalkRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceWalkRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceWalkRes(RequestPoliceWalkRes other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceWalkRes Clone() {
      return new RequestPoliceWalkRes(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.PoliceWalkInfo> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.PoliceWalkInfo.Parser);
    private readonly pbc::RepeatedField<global::Proto.PoliceWalkInfo> data_ = new pbc::RepeatedField<global::Proto.PoliceWalkInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PoliceWalkInfo> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestPoliceWalkRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestPoliceWalkRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestPoliceWalkRes other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PoliceWaydata : pb::IMessage<PoliceWaydata> {
    private static readonly pb::MessageParser<PoliceWaydata> _parser = new pb::MessageParser<PoliceWaydata>(() => new PoliceWaydata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PoliceWaydata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoliceWaydata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoliceWaydata(PoliceWaydata other) : this() {
      fkuuid_ = other.fkuuid_;
      criminal_ = other.criminal_;
      star_ = other.star_;
      xaxis_ = other.xaxis_;
      yaxis_ = other.yaxis_;
      direction_ = other.direction_;
      orientations_ = other.orientations_;
      remainNum_ = other.remainNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoliceWaydata Clone() {
      return new PoliceWaydata(this);
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 1;
    private string fkuuid_ = "";
    /// <summary>
    /// 警察id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Criminal" field.</summary>
    public const int CriminalFieldNumber = 7;
    private long criminal_;
    /// <summary>
    /// 犯罪值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Criminal {
      get { return criminal_; }
      set {
        criminal_ = value;
      }
    }

    /// <summary>Field number for the "Star" field.</summary>
    public const int StarFieldNumber = 6;
    private long star_;
    /// <summary>
    /// 犯罪星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    /// <summary>Field number for the "Xaxis" field.</summary>
    public const int XaxisFieldNumber = 2;
    private long xaxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Xaxis {
      get { return xaxis_; }
      set {
        xaxis_ = value;
      }
    }

    /// <summary>Field number for the "Yaxis" field.</summary>
    public const int YaxisFieldNumber = 3;
    private long yaxis_;
    /// <summary>
    ///Yaxis Y坐标或下标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Yaxis {
      get { return yaxis_; }
      set {
        yaxis_ = value;
      }
    }

    /// <summary>Field number for the "Direction" field.</summary>
    public const int DirectionFieldNumber = 4;
    private bool direction_;
    /// <summary>
    ///Direction 行走方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "Orientations" field.</summary>
    public const int OrientationsFieldNumber = 5;
    private long orientations_;
    /// <summary>
    ///Orientations 朝向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Orientations {
      get { return orientations_; }
      set {
        orientations_ = value;
      }
    }

    /// <summary>Field number for the "RemainNum" field.</summary>
    public const int RemainNumFieldNumber = 8;
    private long remainNum_;
    /// <summary>
    ///RemainNum 剩余步数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RemainNum {
      get { return remainNum_; }
      set {
        remainNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PoliceWaydata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PoliceWaydata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkuuid != other.Fkuuid) return false;
      if (Criminal != other.Criminal) return false;
      if (Star != other.Star) return false;
      if (Xaxis != other.Xaxis) return false;
      if (Yaxis != other.Yaxis) return false;
      if (Direction != other.Direction) return false;
      if (Orientations != other.Orientations) return false;
      if (RemainNum != other.RemainNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Criminal != 0L) hash ^= Criminal.GetHashCode();
      if (Star != 0L) hash ^= Star.GetHashCode();
      if (Xaxis != 0L) hash ^= Xaxis.GetHashCode();
      if (Yaxis != 0L) hash ^= Yaxis.GetHashCode();
      if (Direction != false) hash ^= Direction.GetHashCode();
      if (Orientations != 0L) hash ^= Orientations.GetHashCode();
      if (RemainNum != 0L) hash ^= RemainNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkuuid);
      }
      if (Xaxis != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Xaxis);
      }
      if (Yaxis != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Yaxis);
      }
      if (Direction != false) {
        output.WriteRawTag(32);
        output.WriteBool(Direction);
      }
      if (Orientations != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Orientations);
      }
      if (Star != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Star);
      }
      if (Criminal != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Criminal);
      }
      if (RemainNum != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(RemainNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Criminal != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Criminal);
      }
      if (Star != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Star);
      }
      if (Xaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Xaxis);
      }
      if (Yaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Yaxis);
      }
      if (Direction != false) {
        size += 1 + 1;
      }
      if (Orientations != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Orientations);
      }
      if (RemainNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RemainNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PoliceWaydata other) {
      if (other == null) {
        return;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Criminal != 0L) {
        Criminal = other.Criminal;
      }
      if (other.Star != 0L) {
        Star = other.Star;
      }
      if (other.Xaxis != 0L) {
        Xaxis = other.Xaxis;
      }
      if (other.Yaxis != 0L) {
        Yaxis = other.Yaxis;
      }
      if (other.Direction != false) {
        Direction = other.Direction;
      }
      if (other.Orientations != 0L) {
        Orientations = other.Orientations;
      }
      if (other.RemainNum != 0L) {
        RemainNum = other.RemainNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkuuid = input.ReadString();
            break;
          }
          case 16: {
            Xaxis = input.ReadInt64();
            break;
          }
          case 24: {
            Yaxis = input.ReadInt64();
            break;
          }
          case 32: {
            Direction = input.ReadBool();
            break;
          }
          case 40: {
            Orientations = input.ReadInt64();
            break;
          }
          case 48: {
            Star = input.ReadInt64();
            break;
          }
          case 56: {
            Criminal = input.ReadInt64();
            break;
          }
          case 64: {
            RemainNum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 结论
  /// </summary>
  public sealed partial class RequestPoliceVerifyRes : pb::IMessage<RequestPoliceVerifyRes> {
    private static readonly pb::MessageParser<RequestPoliceVerifyRes> _parser = new pb::MessageParser<RequestPoliceVerifyRes>(() => new RequestPoliceVerifyRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestPoliceVerifyRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceVerifyRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceVerifyRes(RequestPoliceVerifyRes other) : this() {
      caughted_ = other.caughted_;
      fkuuid_ = other.fkuuid_;
      buildingCode_ = other.buildingCode_;
      xaxis_ = other.xaxis_;
      yaxis_ = other.yaxis_;
      orientations_ = other.orientations_;
      punishmentTime_ = other.punishmentTime_;
      PunishmentPrice = other.punishmentPrice_ != null ? other.PunishmentPrice.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceVerifyRes Clone() {
      return new RequestPoliceVerifyRes(this);
    }

    /// <summary>Field number for the "Caughted" field.</summary>
    public const int CaughtedFieldNumber = 1;
    private bool caughted_;
    /// <summary>
    /// 是否被逮捕
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Caughted {
      get { return caughted_; }
      set {
        caughted_ = value;
      }
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 2;
    private string fkuuid_ = "";
    /// <summary>
    /// 逮捕的警察
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BuildingCode" field.</summary>
    public const int BuildingCodeFieldNumber = 3;
    private long buildingCode_;
    /// <summary>
    /// 警察局code 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BuildingCode {
      get { return buildingCode_; }
      set {
        buildingCode_ = value;
      }
    }

    /// <summary>Field number for the "Xaxis" field.</summary>
    public const int XaxisFieldNumber = 4;
    private long xaxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Xaxis {
      get { return xaxis_; }
      set {
        xaxis_ = value;
      }
    }

    /// <summary>Field number for the "Yaxis" field.</summary>
    public const int YaxisFieldNumber = 5;
    private long yaxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Yaxis {
      get { return yaxis_; }
      set {
        yaxis_ = value;
      }
    }

    /// <summary>Field number for the "Orientations" field.</summary>
    public const int OrientationsFieldNumber = 6;
    private long orientations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Orientations {
      get { return orientations_; }
      set {
        orientations_ = value;
      }
    }

    /// <summary>Field number for the "PunishmentTime" field.</summary>
    public const int PunishmentTimeFieldNumber = 11;
    private long punishmentTime_;
    /// <summary>
    /// 拘留时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PunishmentTime {
      get { return punishmentTime_; }
      set {
        punishmentTime_ = value;
      }
    }

    /// <summary>Field number for the "PunishmentPrice" field.</summary>
    public const int PunishmentPriceFieldNumber = 12;
    private global::Proto.Data punishmentPrice_;
    /// <summary>
    /// 罚款
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Data PunishmentPrice {
      get { return punishmentPrice_; }
      set {
        punishmentPrice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestPoliceVerifyRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestPoliceVerifyRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Caughted != other.Caughted) return false;
      if (Fkuuid != other.Fkuuid) return false;
      if (BuildingCode != other.BuildingCode) return false;
      if (Xaxis != other.Xaxis) return false;
      if (Yaxis != other.Yaxis) return false;
      if (Orientations != other.Orientations) return false;
      if (PunishmentTime != other.PunishmentTime) return false;
      if (!object.Equals(PunishmentPrice, other.PunishmentPrice)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Caughted != false) hash ^= Caughted.GetHashCode();
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (BuildingCode != 0L) hash ^= BuildingCode.GetHashCode();
      if (Xaxis != 0L) hash ^= Xaxis.GetHashCode();
      if (Yaxis != 0L) hash ^= Yaxis.GetHashCode();
      if (Orientations != 0L) hash ^= Orientations.GetHashCode();
      if (PunishmentTime != 0L) hash ^= PunishmentTime.GetHashCode();
      if (punishmentPrice_ != null) hash ^= PunishmentPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Caughted != false) {
        output.WriteRawTag(8);
        output.WriteBool(Caughted);
      }
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fkuuid);
      }
      if (BuildingCode != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BuildingCode);
      }
      if (Xaxis != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Xaxis);
      }
      if (Yaxis != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Yaxis);
      }
      if (Orientations != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Orientations);
      }
      if (PunishmentTime != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(PunishmentTime);
      }
      if (punishmentPrice_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PunishmentPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Caughted != false) {
        size += 1 + 1;
      }
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (BuildingCode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuildingCode);
      }
      if (Xaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Xaxis);
      }
      if (Yaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Yaxis);
      }
      if (Orientations != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Orientations);
      }
      if (PunishmentTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PunishmentTime);
      }
      if (punishmentPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PunishmentPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestPoliceVerifyRes other) {
      if (other == null) {
        return;
      }
      if (other.Caughted != false) {
        Caughted = other.Caughted;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.BuildingCode != 0L) {
        BuildingCode = other.BuildingCode;
      }
      if (other.Xaxis != 0L) {
        Xaxis = other.Xaxis;
      }
      if (other.Yaxis != 0L) {
        Yaxis = other.Yaxis;
      }
      if (other.Orientations != 0L) {
        Orientations = other.Orientations;
      }
      if (other.PunishmentTime != 0L) {
        PunishmentTime = other.PunishmentTime;
      }
      if (other.punishmentPrice_ != null) {
        if (punishmentPrice_ == null) {
          punishmentPrice_ = new global::Proto.Data();
        }
        PunishmentPrice.MergeFrom(other.PunishmentPrice);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Caughted = input.ReadBool();
            break;
          }
          case 18: {
            Fkuuid = input.ReadString();
            break;
          }
          case 24: {
            BuildingCode = input.ReadInt64();
            break;
          }
          case 32: {
            Xaxis = input.ReadInt64();
            break;
          }
          case 40: {
            Yaxis = input.ReadInt64();
            break;
          }
          case 48: {
            Orientations = input.ReadInt64();
            break;
          }
          case 88: {
            PunishmentTime = input.ReadInt64();
            break;
          }
          case 98: {
            if (punishmentPrice_ == null) {
              punishmentPrice_ = new global::Proto.Data();
            }
            input.ReadMessage(punishmentPrice_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 验证
  /// </summary>
  public sealed partial class RequestPoliceVerifyReq : pb::IMessage<RequestPoliceVerifyReq> {
    private static readonly pb::MessageParser<RequestPoliceVerifyReq> _parser = new pb::MessageParser<RequestPoliceVerifyReq>(() => new RequestPoliceVerifyReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestPoliceVerifyReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CriminalReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceVerifyReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceVerifyReq(RequestPoliceVerifyReq other) : this() {
      fkcitycode_ = other.fkcitycode_;
      fkuuid_ = other.fkuuid_;
      xaxis_ = other.xaxis_;
      yaxis_ = other.yaxis_;
      orientations_ = other.orientations_;
      policeFkuuid_ = other.policeFkuuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPoliceVerifyReq Clone() {
      return new RequestPoliceVerifyReq(this);
    }

    /// <summary>Field number for the "Fkcitycode" field.</summary>
    public const int FkcitycodeFieldNumber = 6;
    private string fkcitycode_ = "";
    /// <summary>
    /// 这个字段,前端用不着
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkcitycode {
      get { return fkcitycode_; }
      set {
        fkcitycode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fkuuid" field.</summary>
    public const int FkuuidFieldNumber = 1;
    private string fkuuid_ = "";
    /// <summary>
    /// 用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fkuuid {
      get { return fkuuid_; }
      set {
        fkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Xaxis" field.</summary>
    public const int XaxisFieldNumber = 2;
    private long xaxis_;
    /// <summary>
    /// 用户坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Xaxis {
      get { return xaxis_; }
      set {
        xaxis_ = value;
      }
    }

    /// <summary>Field number for the "Yaxis" field.</summary>
    public const int YaxisFieldNumber = 3;
    private long yaxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Yaxis {
      get { return yaxis_; }
      set {
        yaxis_ = value;
      }
    }

    /// <summary>Field number for the "Orientations" field.</summary>
    public const int OrientationsFieldNumber = 5;
    private long orientations_;
    /// <summary>
    ///Orientations 朝向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Orientations {
      get { return orientations_; }
      set {
        orientations_ = value;
      }
    }

    /// <summary>Field number for the "PoliceFkuuid" field.</summary>
    public const int PoliceFkuuidFieldNumber = 4;
    private string policeFkuuid_ = "";
    /// <summary>
    /// 警察id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PoliceFkuuid {
      get { return policeFkuuid_; }
      set {
        policeFkuuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestPoliceVerifyReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestPoliceVerifyReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fkcitycode != other.Fkcitycode) return false;
      if (Fkuuid != other.Fkuuid) return false;
      if (Xaxis != other.Xaxis) return false;
      if (Yaxis != other.Yaxis) return false;
      if (Orientations != other.Orientations) return false;
      if (PoliceFkuuid != other.PoliceFkuuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fkcitycode.Length != 0) hash ^= Fkcitycode.GetHashCode();
      if (Fkuuid.Length != 0) hash ^= Fkuuid.GetHashCode();
      if (Xaxis != 0L) hash ^= Xaxis.GetHashCode();
      if (Yaxis != 0L) hash ^= Yaxis.GetHashCode();
      if (Orientations != 0L) hash ^= Orientations.GetHashCode();
      if (PoliceFkuuid.Length != 0) hash ^= PoliceFkuuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fkuuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fkuuid);
      }
      if (Xaxis != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Xaxis);
      }
      if (Yaxis != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Yaxis);
      }
      if (PoliceFkuuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PoliceFkuuid);
      }
      if (Orientations != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Orientations);
      }
      if (Fkcitycode.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Fkcitycode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fkcitycode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkcitycode);
      }
      if (Fkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fkuuid);
      }
      if (Xaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Xaxis);
      }
      if (Yaxis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Yaxis);
      }
      if (Orientations != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Orientations);
      }
      if (PoliceFkuuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoliceFkuuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestPoliceVerifyReq other) {
      if (other == null) {
        return;
      }
      if (other.Fkcitycode.Length != 0) {
        Fkcitycode = other.Fkcitycode;
      }
      if (other.Fkuuid.Length != 0) {
        Fkuuid = other.Fkuuid;
      }
      if (other.Xaxis != 0L) {
        Xaxis = other.Xaxis;
      }
      if (other.Yaxis != 0L) {
        Yaxis = other.Yaxis;
      }
      if (other.Orientations != 0L) {
        Orientations = other.Orientations;
      }
      if (other.PoliceFkuuid.Length != 0) {
        PoliceFkuuid = other.PoliceFkuuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fkuuid = input.ReadString();
            break;
          }
          case 16: {
            Xaxis = input.ReadInt64();
            break;
          }
          case 24: {
            Yaxis = input.ReadInt64();
            break;
          }
          case 34: {
            PoliceFkuuid = input.ReadString();
            break;
          }
          case 40: {
            Orientations = input.ReadInt64();
            break;
          }
          case 50: {
            Fkcitycode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
