// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pbuilding.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from pbuilding.proto</summary>
  public static partial class PbuildingReflection {

    #region Descriptor
    /// <summary>File descriptor for pbuilding.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PbuildingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9wYnVpbGRpbmcucHJvdG8SBXByb3RvGgtwY2l0eS5wcm90byJ2ChBQU2hh",
            "cmVIb2xkZXJJbmZvEg4KBlVzZXJpZBgBIAEoCRIQCghSb2xlTmFtZRgCIAEo",
            "CRIRCglPd25TaGFyZXMYAyABKAISEgoKSW52ZXN0bWVudBgEIAEoAxIZChFB",
            "Y2N1bXVsYXRlZEluY29tZRgFIAEoAyKQAQoPUEJ1aWxkaW5nSW5jb21lEgwK",
            "BERhdGUYASABKAkSEwoLVG90YWxJbmNvbWUYAiABKAMSHgoWTW9zdFBvcHVs",
            "YXJDb21tb2RpdHlJZBgDIAEoAxIfChdNb3N0UG9wdWxhckNvbW1vZGl0eU51",
            "bRgEIAEoAxIZChFNb3N0UG9wdWxhckluY29tZRgFIAEoAyJkChVSZXF1ZXN0",
            "QWRkQnVpbGRpbmdSZXESFAoMQnVpbGRpbmdDb2RlGAQgASgDEhEKCUxvY2F0",
            "aW9uWBgGIAEoAxIRCglMb2NhdGlvblkYByABKAMSDwoHVG93YXJkcxgIIAEo",
            "AyI/ChVSZXF1ZXN0QWRkQnVpbGRpbmdSc3ASJgoIQmFzZWluZm8YASABKAsy",
            "FC5wcm90by5QQnVpbGRpbmdpbmZvIiUKFVJlcXVlc3RHZXRCdWlsZGluZ1Jl",
            "cRIMCgRVdWlkGAEgASgDIqMBChVSZXF1ZXN0R2V0QnVpbGRpbmdSc3ASFAoM",
            "QnVpbGRpbmdDb2RlGAEgASgDEhIKCkludmVzdG1lbnQYAiABKAMSFwoPWWVz",
            "dGVyZGF5SW5jb21lGAMgASgDEhgKEFllc3RlcmRheVN1YnNpZHkYBCABKAMS",
            "EQoJQXdhaXRUaW1lGAUgASgDEhoKEkxhcmdlc3RTaGFyZWhvbGRlchgGIAEo",
            "CSIqCgZQUHJpY2USEQoJUHJpY2VUeXBlGAEgASgDEg0KBVByaWNlGAIgASgD",
            "IkcKGFJlcXVlc3RJbnZlc3RCdWlsZGluZ1JlcRIMCgRVdWlkGAEgASgDEh0K",
            "BkludmVzdBgEIAMoCzINLnByb3RvLlBQcmljZSJHChhSZXF1ZXN0SW52ZXN0",
            "QnVpbGRpbmdSc3ASFwoPVG90YWxJbnZlc3RtZW50GAEgASgDEhIKCkludmVz",
            "dG1lbnQYAiABKAMiUQoYUmVxdWVzdENoYW5nZUJ1aWxkaW5nUmVxEgwKBFV1",
            "aWQYASABKAMSGQoRQWZ0ZXJCdWlsZGluZ0NvZGUYAyABKAMSDAoEU2tpbhgE",
            "IAEoCSIqChhSZXF1ZXN0Q2hhbmdlQnVpbGRpbmdSc3ASDgoGU3RhdHVzGAEg",
            "ASgIIjkKGVJlcXVlc3RDb25zdW1lQnVpbGRpbmdSZXESDAoEVXVpZBgCIAEo",
            "AxIOCgZTaG9wSWQYAyABKAMiKwoZUmVxdWVzdENvbnN1bWVCdWlsZGluZ1Jz",
            "cBIOCgZTdGF0dXMYASABKAgiUAojUmVxdWVzdEludmVzdG1lbnRSYW5raW5n",
            "QnVpbGRpbmdSZXESDAoEVXVpZBgBIAEoAxIMCgRQYWdlGAIgASgDEg0KBUxp",
            "bWl0GAMgASgDIsABCiNSZXF1ZXN0SW52ZXN0bWVudFJhbmtpbmdCdWlsZGlu",
            "Z1JzcBIlCgRMaXN0GAEgAygLMhcucHJvdG8uUFNoYXJlSG9sZGVySW5mbxIz",
            "ChJVc2VySW52ZXN0bWVudEluZm8YAiABKAsyFy5wcm90by5QU2hhcmVIb2xk",
            "ZXJJbmZvEg0KBVRvdGFsGAMgASgDEi4KDkJ1aWxkaW5nSW5jb21lGAQgAygL",
            "MhYucHJvdG8uUEJ1aWxkaW5nSW5jb21lIioKGlJlcXVlc3RGaW5kQnVpbGRp",
            "bmdXb3JrUmVxEgwKBFV1aWQYASABKAMingEKDVBCdWlsZGluZ1dvcmsSDgoG",
            "V29ya0lkGAEgASgDEg4KBlVzZXJpZBgCIAEoCRIQCghSb2xlTmFtZRgDIAEo",
            "CRIQCghXb3JrVHlwZRgEIAEoAxIVCg1Xb3JrU3RhcnRUaW1lGAUgASgJEh0K",
            "FVdvcmtTdGFydEJ1aWxkaW5nQ29kZRgGIAEoAxITCgtXb3JrRW5kVGltZRgH",
            "IAEoAyJAChpSZXF1ZXN0RmluZEJ1aWxkaW5nV29ya1JzcBIiCgRXb3JrGAEg",
            "AygLMhQucHJvdG8uUEJ1aWxkaW5nV29yayJIChhSZXF1ZXN0V29ya0luQnVp",
            "bGRpbmdSZXESDAoEVXVpZBgCIAEoAxIOCgZXb3JrSWQYAyABKAMSDgoGU3Rh",
            "dHVzGAQgASgDIlIKGFJlcXVlc3RXb3JrSW5CdWlsZGluZ1JzcBISCgpVc2Vy",
            "SW5jb21lGAEgASgDEiIKBFdvcmsYAiADKAsyFC5wcm90by5QQnVpbGRpbmdX",
            "b3JrInkKGVJlcXVlc3RCdWlsZGluZ1VwZ3JhZGVSc3ASEgoKRmtDaXR5Q29k",
            "ZRgBIAEoCRIMCgRVdWlkGAIgASgDEhQKDEJ1aWxkaW5nQ29kZRgDIAEoAxIR",
            "CglMb2NhdGlvblgYBCABKAMSEQoJTG9jYXRpb25ZGAUgASgDIpsBChpSZXF1",
            "ZXN0QnVpbGRpbmdJbml0U3VjY1JzcBISCgpGa0NpdHlDb2RlGAEgASgJEgwK",
            "BFV1aWQYAiABKAMSDgoGVXNlcmlkGAMgASgJEhQKDEJ1aWxkaW5nQ29kZRgE",
            "IAEoAxIRCglMb2NhdGlvblgYBiABKAMSEQoJTG9jYXRpb25ZGAcgASgDEg8K",
            "B1Rvd2FyZHMYCCABKAMikQEKHFJlcXVlc3RCdWlsZGluZ0NoYW5nZVR5cGVS",
            "c3ASEgoKRmtDaXR5Q29kZRgBIAEoCRIMCgRVdWlkGAIgASgDEg4KBlVzZXJp",
            "ZBgDIAEoCRIZChFBZnRlckJ1aWxkaW5nQ29kZRgEIAEoAxIRCglMb2NhdGlv",
            "blgYBiABKAMSEQoJTG9jYXRpb25ZGAcgASgDIl4KGlJlcXVlc3RCdWlsZGlu",
            "Z1VzZXJXb3JrUmVzEg4KBlVzZXJpZBgBIAEoCRIMCgRVdWlkGAIgASgDEhIK",
            "ClVzZXJJbmNvbWUYAyABKAMSDgoGU3RhdHVzGAQgASgDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto.PcityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PShareHolderInfo), global::Proto.PShareHolderInfo.Parser, new[]{ "Userid", "RoleName", "OwnShares", "Investment", "AccumulatedIncome" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PBuildingIncome), global::Proto.PBuildingIncome.Parser, new[]{ "Date", "TotalIncome", "MostPopularCommodityId", "MostPopularCommodityNum", "MostPopularIncome" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestAddBuildingReq), global::Proto.RequestAddBuildingReq.Parser, new[]{ "BuildingCode", "LocationX", "LocationY", "Towards" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestAddBuildingRsp), global::Proto.RequestAddBuildingRsp.Parser, new[]{ "Baseinfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestGetBuildingReq), global::Proto.RequestGetBuildingReq.Parser, new[]{ "Uuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestGetBuildingRsp), global::Proto.RequestGetBuildingRsp.Parser, new[]{ "BuildingCode", "Investment", "YesterdayIncome", "YesterdaySubsidy", "AwaitTime", "LargestShareholder" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PPrice), global::Proto.PPrice.Parser, new[]{ "PriceType", "Price" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestInvestBuildingReq), global::Proto.RequestInvestBuildingReq.Parser, new[]{ "Uuid", "Invest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestInvestBuildingRsp), global::Proto.RequestInvestBuildingRsp.Parser, new[]{ "TotalInvestment", "Investment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestChangeBuildingReq), global::Proto.RequestChangeBuildingReq.Parser, new[]{ "Uuid", "AfterBuildingCode", "Skin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestChangeBuildingRsp), global::Proto.RequestChangeBuildingRsp.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestConsumeBuildingReq), global::Proto.RequestConsumeBuildingReq.Parser, new[]{ "Uuid", "ShopId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestConsumeBuildingRsp), global::Proto.RequestConsumeBuildingRsp.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestInvestmentRankingBuildingReq), global::Proto.RequestInvestmentRankingBuildingReq.Parser, new[]{ "Uuid", "Page", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestInvestmentRankingBuildingRsp), global::Proto.RequestInvestmentRankingBuildingRsp.Parser, new[]{ "List", "UserInvestmentInfo", "Total", "BuildingIncome" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestFindBuildingWorkReq), global::Proto.RequestFindBuildingWorkReq.Parser, new[]{ "Uuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PBuildingWork), global::Proto.PBuildingWork.Parser, new[]{ "WorkId", "Userid", "RoleName", "WorkType", "WorkStartTime", "WorkStartBuildingCode", "WorkEndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestFindBuildingWorkRsp), global::Proto.RequestFindBuildingWorkRsp.Parser, new[]{ "Work" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestWorkInBuildingReq), global::Proto.RequestWorkInBuildingReq.Parser, new[]{ "Uuid", "WorkId", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestWorkInBuildingRsp), global::Proto.RequestWorkInBuildingRsp.Parser, new[]{ "UserIncome", "Work" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestBuildingUpgradeRsp), global::Proto.RequestBuildingUpgradeRsp.Parser, new[]{ "FkCityCode", "Uuid", "BuildingCode", "LocationX", "LocationY" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestBuildingInitSuccRsp), global::Proto.RequestBuildingInitSuccRsp.Parser, new[]{ "FkCityCode", "Uuid", "Userid", "BuildingCode", "LocationX", "LocationY", "Towards" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestBuildingChangeTypeRsp), global::Proto.RequestBuildingChangeTypeRsp.Parser, new[]{ "FkCityCode", "Uuid", "Userid", "AfterBuildingCode", "LocationX", "LocationY" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RequestBuildingUserWorkRes), global::Proto.RequestBuildingUserWorkRes.Parser, new[]{ "Userid", "Uuid", "UserIncome", "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PShareHolderInfo : pb::IMessage<PShareHolderInfo> {
    private static readonly pb::MessageParser<PShareHolderInfo> _parser = new pb::MessageParser<PShareHolderInfo>(() => new PShareHolderInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PShareHolderInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PShareHolderInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PShareHolderInfo(PShareHolderInfo other) : this() {
      userid_ = other.userid_;
      roleName_ = other.roleName_;
      ownShares_ = other.ownShares_;
      investment_ = other.investment_;
      accumulatedIncome_ = other.accumulatedIncome_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PShareHolderInfo Clone() {
      return new PShareHolderInfo(this);
    }

    /// <summary>Field number for the "Userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private string userid_ = "";
    /// <summary>
    ///Userid 用户
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoleName" field.</summary>
    public const int RoleNameFieldNumber = 2;
    private string roleName_ = "";
    /// <summary>
    ///RoleName 角色昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoleName {
      get { return roleName_; }
      set {
        roleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnShares" field.</summary>
    public const int OwnSharesFieldNumber = 3;
    private float ownShares_;
    /// <summary>
    ///OwnShares 股份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float OwnShares {
      get { return ownShares_; }
      set {
        ownShares_ = value;
      }
    }

    /// <summary>Field number for the "Investment" field.</summary>
    public const int InvestmentFieldNumber = 4;
    private long investment_;
    /// <summary>
    ///Investment 投资额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Investment {
      get { return investment_; }
      set {
        investment_ = value;
      }
    }

    /// <summary>Field number for the "AccumulatedIncome" field.</summary>
    public const int AccumulatedIncomeFieldNumber = 5;
    private long accumulatedIncome_;
    /// <summary>
    ///AccumulatedIncome 累计收益
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccumulatedIncome {
      get { return accumulatedIncome_; }
      set {
        accumulatedIncome_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PShareHolderInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PShareHolderInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      if (RoleName != other.RoleName) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OwnShares, other.OwnShares)) return false;
      if (Investment != other.Investment) return false;
      if (AccumulatedIncome != other.AccumulatedIncome) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Userid.Length != 0) hash ^= Userid.GetHashCode();
      if (RoleName.Length != 0) hash ^= RoleName.GetHashCode();
      if (OwnShares != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OwnShares);
      if (Investment != 0L) hash ^= Investment.GetHashCode();
      if (AccumulatedIncome != 0L) hash ^= AccumulatedIncome.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Userid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (RoleName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoleName);
      }
      if (OwnShares != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(OwnShares);
      }
      if (Investment != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Investment);
      }
      if (AccumulatedIncome != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(AccumulatedIncome);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Userid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (RoleName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleName);
      }
      if (OwnShares != 0F) {
        size += 1 + 4;
      }
      if (Investment != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Investment);
      }
      if (AccumulatedIncome != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccumulatedIncome);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PShareHolderInfo other) {
      if (other == null) {
        return;
      }
      if (other.Userid.Length != 0) {
        Userid = other.Userid;
      }
      if (other.RoleName.Length != 0) {
        RoleName = other.RoleName;
      }
      if (other.OwnShares != 0F) {
        OwnShares = other.OwnShares;
      }
      if (other.Investment != 0L) {
        Investment = other.Investment;
      }
      if (other.AccumulatedIncome != 0L) {
        AccumulatedIncome = other.AccumulatedIncome;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
          case 18: {
            RoleName = input.ReadString();
            break;
          }
          case 29: {
            OwnShares = input.ReadFloat();
            break;
          }
          case 32: {
            Investment = input.ReadInt64();
            break;
          }
          case 40: {
            AccumulatedIncome = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBuildingIncome : pb::IMessage<PBuildingIncome> {
    private static readonly pb::MessageParser<PBuildingIncome> _parser = new pb::MessageParser<PBuildingIncome>(() => new PBuildingIncome());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBuildingIncome> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBuildingIncome() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBuildingIncome(PBuildingIncome other) : this() {
      date_ = other.date_;
      totalIncome_ = other.totalIncome_;
      mostPopularCommodityId_ = other.mostPopularCommodityId_;
      mostPopularCommodityNum_ = other.mostPopularCommodityNum_;
      mostPopularIncome_ = other.mostPopularIncome_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBuildingIncome Clone() {
      return new PBuildingIncome(this);
    }

    /// <summary>Field number for the "Date" field.</summary>
    public const int DateFieldNumber = 1;
    private string date_ = "";
    /// <summary>
    ///Date 日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TotalIncome" field.</summary>
    public const int TotalIncomeFieldNumber = 2;
    private long totalIncome_;
    /// <summary>
    ///TotalIncome 总收益
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalIncome {
      get { return totalIncome_; }
      set {
        totalIncome_ = value;
      }
    }

    /// <summary>Field number for the "MostPopularCommodityId" field.</summary>
    public const int MostPopularCommodityIdFieldNumber = 3;
    private long mostPopularCommodityId_;
    /// <summary>
    ///MostPopularCommodityId 最受欢迎商品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MostPopularCommodityId {
      get { return mostPopularCommodityId_; }
      set {
        mostPopularCommodityId_ = value;
      }
    }

    /// <summary>Field number for the "MostPopularCommodityNum" field.</summary>
    public const int MostPopularCommodityNumFieldNumber = 4;
    private long mostPopularCommodityNum_;
    /// <summary>
    ///MostPopularCommodityNum 最受欢迎商品售出数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MostPopularCommodityNum {
      get { return mostPopularCommodityNum_; }
      set {
        mostPopularCommodityNum_ = value;
      }
    }

    /// <summary>Field number for the "MostPopularIncome" field.</summary>
    public const int MostPopularIncomeFieldNumber = 5;
    private long mostPopularIncome_;
    /// <summary>
    ///MostPopularIncome 最受欢迎收益
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MostPopularIncome {
      get { return mostPopularIncome_; }
      set {
        mostPopularIncome_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBuildingIncome);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBuildingIncome other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Date != other.Date) return false;
      if (TotalIncome != other.TotalIncome) return false;
      if (MostPopularCommodityId != other.MostPopularCommodityId) return false;
      if (MostPopularCommodityNum != other.MostPopularCommodityNum) return false;
      if (MostPopularIncome != other.MostPopularIncome) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (TotalIncome != 0L) hash ^= TotalIncome.GetHashCode();
      if (MostPopularCommodityId != 0L) hash ^= MostPopularCommodityId.GetHashCode();
      if (MostPopularCommodityNum != 0L) hash ^= MostPopularCommodityNum.GetHashCode();
      if (MostPopularIncome != 0L) hash ^= MostPopularIncome.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Date.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Date);
      }
      if (TotalIncome != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalIncome);
      }
      if (MostPopularCommodityId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MostPopularCommodityId);
      }
      if (MostPopularCommodityNum != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MostPopularCommodityNum);
      }
      if (MostPopularIncome != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MostPopularIncome);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (TotalIncome != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalIncome);
      }
      if (MostPopularCommodityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MostPopularCommodityId);
      }
      if (MostPopularCommodityNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MostPopularCommodityNum);
      }
      if (MostPopularIncome != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MostPopularIncome);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBuildingIncome other) {
      if (other == null) {
        return;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      if (other.TotalIncome != 0L) {
        TotalIncome = other.TotalIncome;
      }
      if (other.MostPopularCommodityId != 0L) {
        MostPopularCommodityId = other.MostPopularCommodityId;
      }
      if (other.MostPopularCommodityNum != 0L) {
        MostPopularCommodityNum = other.MostPopularCommodityNum;
      }
      if (other.MostPopularIncome != 0L) {
        MostPopularIncome = other.MostPopularIncome;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Date = input.ReadString();
            break;
          }
          case 16: {
            TotalIncome = input.ReadInt64();
            break;
          }
          case 24: {
            MostPopularCommodityId = input.ReadInt64();
            break;
          }
          case 32: {
            MostPopularCommodityNum = input.ReadInt64();
            break;
          }
          case 40: {
            MostPopularIncome = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestAddBuildingReq 新增建筑
  /// </summary>
  public sealed partial class RequestAddBuildingReq : pb::IMessage<RequestAddBuildingReq> {
    private static readonly pb::MessageParser<RequestAddBuildingReq> _parser = new pb::MessageParser<RequestAddBuildingReq>(() => new RequestAddBuildingReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestAddBuildingReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddBuildingReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddBuildingReq(RequestAddBuildingReq other) : this() {
      buildingCode_ = other.buildingCode_;
      locationX_ = other.locationX_;
      locationY_ = other.locationY_;
      towards_ = other.towards_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddBuildingReq Clone() {
      return new RequestAddBuildingReq(this);
    }

    /// <summary>Field number for the "BuildingCode" field.</summary>
    public const int BuildingCodeFieldNumber = 4;
    private long buildingCode_;
    /// <summary>
    /// BuildingCode 建筑code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BuildingCode {
      get { return buildingCode_; }
      set {
        buildingCode_ = value;
      }
    }

    /// <summary>Field number for the "LocationX" field.</summary>
    public const int LocationXFieldNumber = 6;
    private long locationX_;
    /// <summary>
    ///LocationX 建筑x坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LocationX {
      get { return locationX_; }
      set {
        locationX_ = value;
      }
    }

    /// <summary>Field number for the "LocationY" field.</summary>
    public const int LocationYFieldNumber = 7;
    private long locationY_;
    /// <summary>
    ///LocationY 建筑y坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LocationY {
      get { return locationY_; }
      set {
        locationY_ = value;
      }
    }

    /// <summary>Field number for the "Towards" field.</summary>
    public const int TowardsFieldNumber = 8;
    private long towards_;
    /// <summary>
    ///Towards 建筑朝向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Towards {
      get { return towards_; }
      set {
        towards_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestAddBuildingReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestAddBuildingReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingCode != other.BuildingCode) return false;
      if (LocationX != other.LocationX) return false;
      if (LocationY != other.LocationY) return false;
      if (Towards != other.Towards) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingCode != 0L) hash ^= BuildingCode.GetHashCode();
      if (LocationX != 0L) hash ^= LocationX.GetHashCode();
      if (LocationY != 0L) hash ^= LocationY.GetHashCode();
      if (Towards != 0L) hash ^= Towards.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingCode != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BuildingCode);
      }
      if (LocationX != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LocationX);
      }
      if (LocationY != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(LocationY);
      }
      if (Towards != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Towards);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingCode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuildingCode);
      }
      if (LocationX != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LocationX);
      }
      if (LocationY != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LocationY);
      }
      if (Towards != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Towards);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestAddBuildingReq other) {
      if (other == null) {
        return;
      }
      if (other.BuildingCode != 0L) {
        BuildingCode = other.BuildingCode;
      }
      if (other.LocationX != 0L) {
        LocationX = other.LocationX;
      }
      if (other.LocationY != 0L) {
        LocationY = other.LocationY;
      }
      if (other.Towards != 0L) {
        Towards = other.Towards;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 32: {
            BuildingCode = input.ReadInt64();
            break;
          }
          case 48: {
            LocationX = input.ReadInt64();
            break;
          }
          case 56: {
            LocationY = input.ReadInt64();
            break;
          }
          case 64: {
            Towards = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestAddBuildingRsp 新增建筑是否成功
  /// </summary>
  public sealed partial class RequestAddBuildingRsp : pb::IMessage<RequestAddBuildingRsp> {
    private static readonly pb::MessageParser<RequestAddBuildingRsp> _parser = new pb::MessageParser<RequestAddBuildingRsp>(() => new RequestAddBuildingRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestAddBuildingRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddBuildingRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddBuildingRsp(RequestAddBuildingRsp other) : this() {
      Baseinfo = other.baseinfo_ != null ? other.Baseinfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddBuildingRsp Clone() {
      return new RequestAddBuildingRsp(this);
    }

    /// <summary>Field number for the "Baseinfo" field.</summary>
    public const int BaseinfoFieldNumber = 1;
    private global::Proto.PBuildinginfo baseinfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.PBuildinginfo Baseinfo {
      get { return baseinfo_; }
      set {
        baseinfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestAddBuildingRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestAddBuildingRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Baseinfo, other.Baseinfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (baseinfo_ != null) hash ^= Baseinfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (baseinfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Baseinfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (baseinfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Baseinfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestAddBuildingRsp other) {
      if (other == null) {
        return;
      }
      if (other.baseinfo_ != null) {
        if (baseinfo_ == null) {
          baseinfo_ = new global::Proto.PBuildinginfo();
        }
        Baseinfo.MergeFrom(other.Baseinfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (baseinfo_ == null) {
              baseinfo_ = new global::Proto.PBuildinginfo();
            }
            input.ReadMessage(baseinfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestGetBuildingReq 获取建筑详细信息
  /// </summary>
  public sealed partial class RequestGetBuildingReq : pb::IMessage<RequestGetBuildingReq> {
    private static readonly pb::MessageParser<RequestGetBuildingReq> _parser = new pb::MessageParser<RequestGetBuildingReq>(() => new RequestGetBuildingReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestGetBuildingReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetBuildingReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetBuildingReq(RequestGetBuildingReq other) : this() {
      uuid_ = other.uuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetBuildingReq Clone() {
      return new RequestGetBuildingReq(this);
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private long uuid_;
    /// <summary>
    ///Uuid 建筑Uuid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestGetBuildingReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestGetBuildingReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestGetBuildingReq other) {
      if (other == null) {
        return;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uuid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestGetBuildingRsp 建筑详细信息
  /// </summary>
  public sealed partial class RequestGetBuildingRsp : pb::IMessage<RequestGetBuildingRsp> {
    private static readonly pb::MessageParser<RequestGetBuildingRsp> _parser = new pb::MessageParser<RequestGetBuildingRsp>(() => new RequestGetBuildingRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestGetBuildingRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetBuildingRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetBuildingRsp(RequestGetBuildingRsp other) : this() {
      buildingCode_ = other.buildingCode_;
      investment_ = other.investment_;
      yesterdayIncome_ = other.yesterdayIncome_;
      yesterdaySubsidy_ = other.yesterdaySubsidy_;
      awaitTime_ = other.awaitTime_;
      largestShareholder_ = other.largestShareholder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetBuildingRsp Clone() {
      return new RequestGetBuildingRsp(this);
    }

    /// <summary>Field number for the "BuildingCode" field.</summary>
    public const int BuildingCodeFieldNumber = 1;
    private long buildingCode_;
    /// <summary>
    ///BuildingCode 建筑code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BuildingCode {
      get { return buildingCode_; }
      set {
        buildingCode_ = value;
      }
    }

    /// <summary>Field number for the "Investment" field.</summary>
    public const int InvestmentFieldNumber = 2;
    private long investment_;
    /// <summary>
    ///Investment 建筑总投资额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Investment {
      get { return investment_; }
      set {
        investment_ = value;
      }
    }

    /// <summary>Field number for the "YesterdayIncome" field.</summary>
    public const int YesterdayIncomeFieldNumber = 3;
    private long yesterdayIncome_;
    /// <summary>
    ///YesterdayIncome 建筑昨日收益
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long YesterdayIncome {
      get { return yesterdayIncome_; }
      set {
        yesterdayIncome_ = value;
      }
    }

    /// <summary>Field number for the "YesterdaySubsidy" field.</summary>
    public const int YesterdaySubsidyFieldNumber = 4;
    private long yesterdaySubsidy_;
    /// <summary>
    ///YesterdaySubsidy 建筑昨日补贴
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long YesterdaySubsidy {
      get { return yesterdaySubsidy_; }
      set {
        yesterdaySubsidy_ = value;
      }
    }

    /// <summary>Field number for the "AwaitTime" field.</summary>
    public const int AwaitTimeFieldNumber = 5;
    private long awaitTime_;
    /// <summary>
    ///AwaitTime 操作等待时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AwaitTime {
      get { return awaitTime_; }
      set {
        awaitTime_ = value;
      }
    }

    /// <summary>Field number for the "LargestShareholder" field.</summary>
    public const int LargestShareholderFieldNumber = 6;
    private string largestShareholder_ = "";
    /// <summary>
    ///LargestShareholder 此建筑最大股东
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LargestShareholder {
      get { return largestShareholder_; }
      set {
        largestShareholder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestGetBuildingRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestGetBuildingRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingCode != other.BuildingCode) return false;
      if (Investment != other.Investment) return false;
      if (YesterdayIncome != other.YesterdayIncome) return false;
      if (YesterdaySubsidy != other.YesterdaySubsidy) return false;
      if (AwaitTime != other.AwaitTime) return false;
      if (LargestShareholder != other.LargestShareholder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingCode != 0L) hash ^= BuildingCode.GetHashCode();
      if (Investment != 0L) hash ^= Investment.GetHashCode();
      if (YesterdayIncome != 0L) hash ^= YesterdayIncome.GetHashCode();
      if (YesterdaySubsidy != 0L) hash ^= YesterdaySubsidy.GetHashCode();
      if (AwaitTime != 0L) hash ^= AwaitTime.GetHashCode();
      if (LargestShareholder.Length != 0) hash ^= LargestShareholder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingCode != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BuildingCode);
      }
      if (Investment != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Investment);
      }
      if (YesterdayIncome != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(YesterdayIncome);
      }
      if (YesterdaySubsidy != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(YesterdaySubsidy);
      }
      if (AwaitTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(AwaitTime);
      }
      if (LargestShareholder.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LargestShareholder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingCode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuildingCode);
      }
      if (Investment != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Investment);
      }
      if (YesterdayIncome != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(YesterdayIncome);
      }
      if (YesterdaySubsidy != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(YesterdaySubsidy);
      }
      if (AwaitTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AwaitTime);
      }
      if (LargestShareholder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LargestShareholder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestGetBuildingRsp other) {
      if (other == null) {
        return;
      }
      if (other.BuildingCode != 0L) {
        BuildingCode = other.BuildingCode;
      }
      if (other.Investment != 0L) {
        Investment = other.Investment;
      }
      if (other.YesterdayIncome != 0L) {
        YesterdayIncome = other.YesterdayIncome;
      }
      if (other.YesterdaySubsidy != 0L) {
        YesterdaySubsidy = other.YesterdaySubsidy;
      }
      if (other.AwaitTime != 0L) {
        AwaitTime = other.AwaitTime;
      }
      if (other.LargestShareholder.Length != 0) {
        LargestShareholder = other.LargestShareholder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingCode = input.ReadInt64();
            break;
          }
          case 16: {
            Investment = input.ReadInt64();
            break;
          }
          case 24: {
            YesterdayIncome = input.ReadInt64();
            break;
          }
          case 32: {
            YesterdaySubsidy = input.ReadInt64();
            break;
          }
          case 40: {
            AwaitTime = input.ReadInt64();
            break;
          }
          case 50: {
            LargestShareholder = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 价格类型和值
  /// </summary>
  public sealed partial class PPrice : pb::IMessage<PPrice> {
    private static readonly pb::MessageParser<PPrice> _parser = new pb::MessageParser<PPrice>(() => new PPrice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PPrice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PPrice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PPrice(PPrice other) : this() {
      priceType_ = other.priceType_;
      price_ = other.price_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PPrice Clone() {
      return new PPrice(this);
    }

    /// <summary>Field number for the "PriceType" field.</summary>
    public const int PriceTypeFieldNumber = 1;
    private long priceType_;
    /// <summary>
    /// 货币类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PriceType {
      get { return priceType_; }
      set {
        priceType_ = value;
      }
    }

    /// <summary>Field number for the "Price" field.</summary>
    public const int PriceFieldNumber = 2;
    private long price_;
    /// <summary>
    /// 费用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PPrice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PPrice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PriceType != other.PriceType) return false;
      if (Price != other.Price) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PriceType != 0L) hash ^= PriceType.GetHashCode();
      if (Price != 0L) hash ^= Price.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PriceType != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PriceType);
      }
      if (Price != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PriceType != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PriceType);
      }
      if (Price != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Price);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PPrice other) {
      if (other == null) {
        return;
      }
      if (other.PriceType != 0L) {
        PriceType = other.PriceType;
      }
      if (other.Price != 0L) {
        Price = other.Price;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PriceType = input.ReadInt64();
            break;
          }
          case 16: {
            Price = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestInvestmentBuildingReq 建筑投资
  /// </summary>
  public sealed partial class RequestInvestBuildingReq : pb::IMessage<RequestInvestBuildingReq> {
    private static readonly pb::MessageParser<RequestInvestBuildingReq> _parser = new pb::MessageParser<RequestInvestBuildingReq>(() => new RequestInvestBuildingReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestInvestBuildingReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestBuildingReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestBuildingReq(RequestInvestBuildingReq other) : this() {
      uuid_ = other.uuid_;
      invest_ = other.invest_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestBuildingReq Clone() {
      return new RequestInvestBuildingReq(this);
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private long uuid_;
    /// <summary>
    ///Uuid 建筑Uuid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "Invest" field.</summary>
    public const int InvestFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Proto.PPrice> _repeated_invest_codec
        = pb::FieldCodec.ForMessage(34, global::Proto.PPrice.Parser);
    private readonly pbc::RepeatedField<global::Proto.PPrice> invest_ = new pbc::RepeatedField<global::Proto.PPrice>();
    /// <summary>
    ///Invest 投资额度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PPrice> Invest {
      get { return invest_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestInvestBuildingReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestInvestBuildingReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if(!invest_.Equals(other.invest_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      hash ^= invest_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uuid);
      }
      invest_.WriteTo(output, _repeated_invest_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      size += invest_.CalculateSize(_repeated_invest_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestInvestBuildingReq other) {
      if (other == null) {
        return;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      invest_.Add(other.invest_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uuid = input.ReadInt64();
            break;
          }
          case 34: {
            invest_.AddEntriesFrom(input, _repeated_invest_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestInvestBuildingRsp 建筑投资
  /// </summary>
  public sealed partial class RequestInvestBuildingRsp : pb::IMessage<RequestInvestBuildingRsp> {
    private static readonly pb::MessageParser<RequestInvestBuildingRsp> _parser = new pb::MessageParser<RequestInvestBuildingRsp>(() => new RequestInvestBuildingRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestInvestBuildingRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestBuildingRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestBuildingRsp(RequestInvestBuildingRsp other) : this() {
      totalInvestment_ = other.totalInvestment_;
      investment_ = other.investment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestBuildingRsp Clone() {
      return new RequestInvestBuildingRsp(this);
    }

    /// <summary>Field number for the "TotalInvestment" field.</summary>
    public const int TotalInvestmentFieldNumber = 1;
    private long totalInvestment_;
    /// <summary>
    ///TotalInvestment 总投资额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalInvestment {
      get { return totalInvestment_; }
      set {
        totalInvestment_ = value;
      }
    }

    /// <summary>Field number for the "Investment" field.</summary>
    public const int InvestmentFieldNumber = 2;
    private long investment_;
    /// <summary>
    ///Investment 此用户投资额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Investment {
      get { return investment_; }
      set {
        investment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestInvestBuildingRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestInvestBuildingRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalInvestment != other.TotalInvestment) return false;
      if (Investment != other.Investment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalInvestment != 0L) hash ^= TotalInvestment.GetHashCode();
      if (Investment != 0L) hash ^= Investment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TotalInvestment != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TotalInvestment);
      }
      if (Investment != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Investment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalInvestment != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalInvestment);
      }
      if (Investment != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Investment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestInvestBuildingRsp other) {
      if (other == null) {
        return;
      }
      if (other.TotalInvestment != 0L) {
        TotalInvestment = other.TotalInvestment;
      }
      if (other.Investment != 0L) {
        Investment = other.Investment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalInvestment = input.ReadInt64();
            break;
          }
          case 16: {
            Investment = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestChangeBuildingReq 建筑更改
  /// </summary>
  public sealed partial class RequestChangeBuildingReq : pb::IMessage<RequestChangeBuildingReq> {
    private static readonly pb::MessageParser<RequestChangeBuildingReq> _parser = new pb::MessageParser<RequestChangeBuildingReq>(() => new RequestChangeBuildingReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestChangeBuildingReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestChangeBuildingReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestChangeBuildingReq(RequestChangeBuildingReq other) : this() {
      uuid_ = other.uuid_;
      afterBuildingCode_ = other.afterBuildingCode_;
      skin_ = other.skin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestChangeBuildingReq Clone() {
      return new RequestChangeBuildingReq(this);
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private long uuid_;
    /// <summary>
    ///Id 建筑Uuid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "AfterBuildingCode" field.</summary>
    public const int AfterBuildingCodeFieldNumber = 3;
    private long afterBuildingCode_;
    /// <summary>
    ///AfterBuildingCode 新类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AfterBuildingCode {
      get { return afterBuildingCode_; }
      set {
        afterBuildingCode_ = value;
      }
    }

    /// <summary>Field number for the "Skin" field.</summary>
    public const int SkinFieldNumber = 4;
    private string skin_ = "";
    /// <summary>
    ///NFTSkin 建筑皮肤
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Skin {
      get { return skin_; }
      set {
        skin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestChangeBuildingReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestChangeBuildingReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (AfterBuildingCode != other.AfterBuildingCode) return false;
      if (Skin != other.Skin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (AfterBuildingCode != 0L) hash ^= AfterBuildingCode.GetHashCode();
      if (Skin.Length != 0) hash ^= Skin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uuid);
      }
      if (AfterBuildingCode != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AfterBuildingCode);
      }
      if (Skin.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Skin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (AfterBuildingCode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AfterBuildingCode);
      }
      if (Skin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Skin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestChangeBuildingReq other) {
      if (other == null) {
        return;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      if (other.AfterBuildingCode != 0L) {
        AfterBuildingCode = other.AfterBuildingCode;
      }
      if (other.Skin.Length != 0) {
        Skin = other.Skin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uuid = input.ReadInt64();
            break;
          }
          case 24: {
            AfterBuildingCode = input.ReadInt64();
            break;
          }
          case 34: {
            Skin = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestChangeBuildingRsp 建筑更改
  /// </summary>
  public sealed partial class RequestChangeBuildingRsp : pb::IMessage<RequestChangeBuildingRsp> {
    private static readonly pb::MessageParser<RequestChangeBuildingRsp> _parser = new pb::MessageParser<RequestChangeBuildingRsp>(() => new RequestChangeBuildingRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestChangeBuildingRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestChangeBuildingRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestChangeBuildingRsp(RequestChangeBuildingRsp other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestChangeBuildingRsp Clone() {
      return new RequestChangeBuildingRsp(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private bool status_;
    /// <summary>
    /// 建筑更改是否成功
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestChangeBuildingRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestChangeBuildingRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != false) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != false) {
        output.WriteRawTag(8);
        output.WriteBool(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestChangeBuildingRsp other) {
      if (other == null) {
        return;
      }
      if (other.Status != false) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestConsumeBuildingReq 建筑消费请求
  /// </summary>
  public sealed partial class RequestConsumeBuildingReq : pb::IMessage<RequestConsumeBuildingReq> {
    private static readonly pb::MessageParser<RequestConsumeBuildingReq> _parser = new pb::MessageParser<RequestConsumeBuildingReq>(() => new RequestConsumeBuildingReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestConsumeBuildingReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestConsumeBuildingReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestConsumeBuildingReq(RequestConsumeBuildingReq other) : this() {
      uuid_ = other.uuid_;
      shopId_ = other.shopId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestConsumeBuildingReq Clone() {
      return new RequestConsumeBuildingReq(this);
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 2;
    private long uuid_;
    /// <summary>
    ///Uuid 建筑Uuid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "ShopId" field.</summary>
    public const int ShopIdFieldNumber = 3;
    private long shopId_;
    /// <summary>
    ///ShopId 货物架id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShopId {
      get { return shopId_; }
      set {
        shopId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestConsumeBuildingReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestConsumeBuildingReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (ShopId != other.ShopId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (ShopId != 0L) hash ^= ShopId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Uuid);
      }
      if (ShopId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ShopId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (ShopId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShopId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestConsumeBuildingReq other) {
      if (other == null) {
        return;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      if (other.ShopId != 0L) {
        ShopId = other.ShopId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Uuid = input.ReadInt64();
            break;
          }
          case 24: {
            ShopId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestConsumeBuildingRsp : pb::IMessage<RequestConsumeBuildingRsp> {
    private static readonly pb::MessageParser<RequestConsumeBuildingRsp> _parser = new pb::MessageParser<RequestConsumeBuildingRsp>(() => new RequestConsumeBuildingRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestConsumeBuildingRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestConsumeBuildingRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestConsumeBuildingRsp(RequestConsumeBuildingRsp other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestConsumeBuildingRsp Clone() {
      return new RequestConsumeBuildingRsp(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private bool status_;
    /// <summary>
    /// 是否消费成功
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestConsumeBuildingRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestConsumeBuildingRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != false) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != false) {
        output.WriteRawTag(8);
        output.WriteBool(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestConsumeBuildingRsp other) {
      if (other == null) {
        return;
      }
      if (other.Status != false) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestInvestmentRankingBuildingReq 建筑投资排行榜
  /// </summary>
  public sealed partial class RequestInvestmentRankingBuildingReq : pb::IMessage<RequestInvestmentRankingBuildingReq> {
    private static readonly pb::MessageParser<RequestInvestmentRankingBuildingReq> _parser = new pb::MessageParser<RequestInvestmentRankingBuildingReq>(() => new RequestInvestmentRankingBuildingReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestInvestmentRankingBuildingReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestmentRankingBuildingReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestmentRankingBuildingReq(RequestInvestmentRankingBuildingReq other) : this() {
      uuid_ = other.uuid_;
      page_ = other.page_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestmentRankingBuildingReq Clone() {
      return new RequestInvestmentRankingBuildingReq(this);
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private long uuid_;
    /// <summary>
    /// 建筑Uuid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "Page" field.</summary>
    public const int PageFieldNumber = 2;
    private long page_;
    /// <summary>
    ///Page
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "Limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private long limit_;
    /// <summary>
    ///Limit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestInvestmentRankingBuildingReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestInvestmentRankingBuildingReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (Page != other.Page) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (Page != 0L) hash ^= Page.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uuid);
      }
      if (Page != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Page);
      }
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (Page != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Page);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestInvestmentRankingBuildingReq other) {
      if (other == null) {
        return;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      if (other.Page != 0L) {
        Page = other.Page;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uuid = input.ReadInt64();
            break;
          }
          case 16: {
            Page = input.ReadInt64();
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestInvestmentRankingBuildingRsp 建筑投资排行榜
  /// </summary>
  public sealed partial class RequestInvestmentRankingBuildingRsp : pb::IMessage<RequestInvestmentRankingBuildingRsp> {
    private static readonly pb::MessageParser<RequestInvestmentRankingBuildingRsp> _parser = new pb::MessageParser<RequestInvestmentRankingBuildingRsp>(() => new RequestInvestmentRankingBuildingRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestInvestmentRankingBuildingRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestmentRankingBuildingRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestmentRankingBuildingRsp(RequestInvestmentRankingBuildingRsp other) : this() {
      list_ = other.list_.Clone();
      UserInvestmentInfo = other.userInvestmentInfo_ != null ? other.UserInvestmentInfo.Clone() : null;
      total_ = other.total_;
      buildingIncome_ = other.buildingIncome_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInvestmentRankingBuildingRsp Clone() {
      return new RequestInvestmentRankingBuildingRsp(this);
    }

    /// <summary>Field number for the "List" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.PShareHolderInfo> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.PShareHolderInfo.Parser);
    private readonly pbc::RepeatedField<global::Proto.PShareHolderInfo> list_ = new pbc::RepeatedField<global::Proto.PShareHolderInfo>();
    /// <summary>
    ///建筑投资清单
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PShareHolderInfo> List {
      get { return list_; }
    }

    /// <summary>Field number for the "UserInvestmentInfo" field.</summary>
    public const int UserInvestmentInfoFieldNumber = 2;
    private global::Proto.PShareHolderInfo userInvestmentInfo_;
    /// <summary>
    ///此用户投资情况
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.PShareHolderInfo UserInvestmentInfo {
      get { return userInvestmentInfo_; }
      set {
        userInvestmentInfo_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 3;
    private long total_;
    /// <summary>
    ///Total 总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "BuildingIncome" field.</summary>
    public const int BuildingIncomeFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Proto.PBuildingIncome> _repeated_buildingIncome_codec
        = pb::FieldCodec.ForMessage(34, global::Proto.PBuildingIncome.Parser);
    private readonly pbc::RepeatedField<global::Proto.PBuildingIncome> buildingIncome_ = new pbc::RepeatedField<global::Proto.PBuildingIncome>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PBuildingIncome> BuildingIncome {
      get { return buildingIncome_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestInvestmentRankingBuildingRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestInvestmentRankingBuildingRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      if (!object.Equals(UserInvestmentInfo, other.UserInvestmentInfo)) return false;
      if (Total != other.Total) return false;
      if(!buildingIncome_.Equals(other.buildingIncome_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (userInvestmentInfo_ != null) hash ^= UserInvestmentInfo.GetHashCode();
      if (Total != 0L) hash ^= Total.GetHashCode();
      hash ^= buildingIncome_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (userInvestmentInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInvestmentInfo);
      }
      if (Total != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Total);
      }
      buildingIncome_.WriteTo(output, _repeated_buildingIncome_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (userInvestmentInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInvestmentInfo);
      }
      if (Total != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Total);
      }
      size += buildingIncome_.CalculateSize(_repeated_buildingIncome_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestInvestmentRankingBuildingRsp other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      if (other.userInvestmentInfo_ != null) {
        if (userInvestmentInfo_ == null) {
          userInvestmentInfo_ = new global::Proto.PShareHolderInfo();
        }
        UserInvestmentInfo.MergeFrom(other.UserInvestmentInfo);
      }
      if (other.Total != 0L) {
        Total = other.Total;
      }
      buildingIncome_.Add(other.buildingIncome_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
          case 18: {
            if (userInvestmentInfo_ == null) {
              userInvestmentInfo_ = new global::Proto.PShareHolderInfo();
            }
            input.ReadMessage(userInvestmentInfo_);
            break;
          }
          case 24: {
            Total = input.ReadInt64();
            break;
          }
          case 34: {
            buildingIncome_.AddEntriesFrom(input, _repeated_buildingIncome_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestFindBuildingWorkReq 查看建筑打工位
  /// </summary>
  public sealed partial class RequestFindBuildingWorkReq : pb::IMessage<RequestFindBuildingWorkReq> {
    private static readonly pb::MessageParser<RequestFindBuildingWorkReq> _parser = new pb::MessageParser<RequestFindBuildingWorkReq>(() => new RequestFindBuildingWorkReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestFindBuildingWorkReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindBuildingWorkReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindBuildingWorkReq(RequestFindBuildingWorkReq other) : this() {
      uuid_ = other.uuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindBuildingWorkReq Clone() {
      return new RequestFindBuildingWorkReq(this);
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private long uuid_;
    /// <summary>
    /// 建筑唯一Uuid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestFindBuildingWorkReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestFindBuildingWorkReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestFindBuildingWorkReq other) {
      if (other == null) {
        return;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uuid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///PBuildingWork 建筑打工位信息
  /// </summary>
  public sealed partial class PBuildingWork : pb::IMessage<PBuildingWork> {
    private static readonly pb::MessageParser<PBuildingWork> _parser = new pb::MessageParser<PBuildingWork>(() => new PBuildingWork());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBuildingWork> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBuildingWork() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBuildingWork(PBuildingWork other) : this() {
      workId_ = other.workId_;
      userid_ = other.userid_;
      roleName_ = other.roleName_;
      workType_ = other.workType_;
      workStartTime_ = other.workStartTime_;
      workStartBuildingCode_ = other.workStartBuildingCode_;
      workEndTime_ = other.workEndTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBuildingWork Clone() {
      return new PBuildingWork(this);
    }

    /// <summary>Field number for the "WorkId" field.</summary>
    public const int WorkIdFieldNumber = 1;
    private long workId_;
    /// <summary>
    ///WorkId 工号id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WorkId {
      get { return workId_; }
      set {
        workId_ = value;
      }
    }

    /// <summary>Field number for the "Userid" field.</summary>
    public const int UseridFieldNumber = 2;
    private string userid_ = "";
    /// <summary>
    ///Userid 打工人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoleName" field.</summary>
    public const int RoleNameFieldNumber = 3;
    private string roleName_ = "";
    /// <summary>
    ///RoleName 角色名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoleName {
      get { return roleName_; }
      set {
        roleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WorkType" field.</summary>
    public const int WorkTypeFieldNumber = 4;
    private long workType_;
    /// <summary>
    ///WorkType 工位类型（1好友打工位 2普通打工位）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WorkType {
      get { return workType_; }
      set {
        workType_ = value;
      }
    }

    /// <summary>Field number for the "WorkStartTime" field.</summary>
    public const int WorkStartTimeFieldNumber = 5;
    private string workStartTime_ = "";
    /// <summary>
    ///WorkStartTime 打工开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkStartTime {
      get { return workStartTime_; }
      set {
        workStartTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WorkStartBuildingCode" field.</summary>
    public const int WorkStartBuildingCodeFieldNumber = 6;
    private long workStartBuildingCode_;
    /// <summary>
    ///WorkStartBuildingCode 打工开始时建筑code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WorkStartBuildingCode {
      get { return workStartBuildingCode_; }
      set {
        workStartBuildingCode_ = value;
      }
    }

    /// <summary>Field number for the "WorkEndTime" field.</summary>
    public const int WorkEndTimeFieldNumber = 7;
    private long workEndTime_;
    /// <summary>
    ///WorkEndTime 打工结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WorkEndTime {
      get { return workEndTime_; }
      set {
        workEndTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBuildingWork);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBuildingWork other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorkId != other.WorkId) return false;
      if (Userid != other.Userid) return false;
      if (RoleName != other.RoleName) return false;
      if (WorkType != other.WorkType) return false;
      if (WorkStartTime != other.WorkStartTime) return false;
      if (WorkStartBuildingCode != other.WorkStartBuildingCode) return false;
      if (WorkEndTime != other.WorkEndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorkId != 0L) hash ^= WorkId.GetHashCode();
      if (Userid.Length != 0) hash ^= Userid.GetHashCode();
      if (RoleName.Length != 0) hash ^= RoleName.GetHashCode();
      if (WorkType != 0L) hash ^= WorkType.GetHashCode();
      if (WorkStartTime.Length != 0) hash ^= WorkStartTime.GetHashCode();
      if (WorkStartBuildingCode != 0L) hash ^= WorkStartBuildingCode.GetHashCode();
      if (WorkEndTime != 0L) hash ^= WorkEndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorkId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(WorkId);
      }
      if (Userid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Userid);
      }
      if (RoleName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoleName);
      }
      if (WorkType != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(WorkType);
      }
      if (WorkStartTime.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(WorkStartTime);
      }
      if (WorkStartBuildingCode != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(WorkStartBuildingCode);
      }
      if (WorkEndTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(WorkEndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorkId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WorkId);
      }
      if (Userid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (RoleName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleName);
      }
      if (WorkType != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WorkType);
      }
      if (WorkStartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkStartTime);
      }
      if (WorkStartBuildingCode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WorkStartBuildingCode);
      }
      if (WorkEndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WorkEndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBuildingWork other) {
      if (other == null) {
        return;
      }
      if (other.WorkId != 0L) {
        WorkId = other.WorkId;
      }
      if (other.Userid.Length != 0) {
        Userid = other.Userid;
      }
      if (other.RoleName.Length != 0) {
        RoleName = other.RoleName;
      }
      if (other.WorkType != 0L) {
        WorkType = other.WorkType;
      }
      if (other.WorkStartTime.Length != 0) {
        WorkStartTime = other.WorkStartTime;
      }
      if (other.WorkStartBuildingCode != 0L) {
        WorkStartBuildingCode = other.WorkStartBuildingCode;
      }
      if (other.WorkEndTime != 0L) {
        WorkEndTime = other.WorkEndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorkId = input.ReadInt64();
            break;
          }
          case 18: {
            Userid = input.ReadString();
            break;
          }
          case 26: {
            RoleName = input.ReadString();
            break;
          }
          case 32: {
            WorkType = input.ReadInt64();
            break;
          }
          case 42: {
            WorkStartTime = input.ReadString();
            break;
          }
          case 48: {
            WorkStartBuildingCode = input.ReadInt64();
            break;
          }
          case 56: {
            WorkEndTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestFindBuildingWorkRsp 建筑打工位
  /// </summary>
  public sealed partial class RequestFindBuildingWorkRsp : pb::IMessage<RequestFindBuildingWorkRsp> {
    private static readonly pb::MessageParser<RequestFindBuildingWorkRsp> _parser = new pb::MessageParser<RequestFindBuildingWorkRsp>(() => new RequestFindBuildingWorkRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestFindBuildingWorkRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindBuildingWorkRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindBuildingWorkRsp(RequestFindBuildingWorkRsp other) : this() {
      work_ = other.work_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindBuildingWorkRsp Clone() {
      return new RequestFindBuildingWorkRsp(this);
    }

    /// <summary>Field number for the "Work" field.</summary>
    public const int WorkFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.PBuildingWork> _repeated_work_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.PBuildingWork.Parser);
    private readonly pbc::RepeatedField<global::Proto.PBuildingWork> work_ = new pbc::RepeatedField<global::Proto.PBuildingWork>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PBuildingWork> Work {
      get { return work_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestFindBuildingWorkRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestFindBuildingWorkRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!work_.Equals(other.work_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= work_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      work_.WriteTo(output, _repeated_work_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += work_.CalculateSize(_repeated_work_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestFindBuildingWorkRsp other) {
      if (other == null) {
        return;
      }
      work_.Add(other.work_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            work_.AddEntriesFrom(input, _repeated_work_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///RequestWorkInBuildingReq 建筑打工
  /// </summary>
  public sealed partial class RequestWorkInBuildingReq : pb::IMessage<RequestWorkInBuildingReq> {
    private static readonly pb::MessageParser<RequestWorkInBuildingReq> _parser = new pb::MessageParser<RequestWorkInBuildingReq>(() => new RequestWorkInBuildingReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestWorkInBuildingReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWorkInBuildingReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWorkInBuildingReq(RequestWorkInBuildingReq other) : this() {
      uuid_ = other.uuid_;
      workId_ = other.workId_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWorkInBuildingReq Clone() {
      return new RequestWorkInBuildingReq(this);
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 2;
    private long uuid_;
    /// <summary>
    ///Uuid 建筑Uuid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "WorkId" field.</summary>
    public const int WorkIdFieldNumber = 3;
    private long workId_;
    /// <summary>
    ///WorkId 工号id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WorkId {
      get { return workId_; }
      set {
        workId_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 4;
    private long status_;
    /// <summary>
    ///Status 状态 0开始打工 1结束打工
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestWorkInBuildingReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestWorkInBuildingReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (WorkId != other.WorkId) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (WorkId != 0L) hash ^= WorkId.GetHashCode();
      if (Status != 0L) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Uuid);
      }
      if (WorkId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WorkId);
      }
      if (Status != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (WorkId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WorkId);
      }
      if (Status != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestWorkInBuildingReq other) {
      if (other == null) {
        return;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      if (other.WorkId != 0L) {
        WorkId = other.WorkId;
      }
      if (other.Status != 0L) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Uuid = input.ReadInt64();
            break;
          }
          case 24: {
            WorkId = input.ReadInt64();
            break;
          }
          case 32: {
            Status = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestWorkInBuildingRsp : pb::IMessage<RequestWorkInBuildingRsp> {
    private static readonly pb::MessageParser<RequestWorkInBuildingRsp> _parser = new pb::MessageParser<RequestWorkInBuildingRsp>(() => new RequestWorkInBuildingRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestWorkInBuildingRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWorkInBuildingRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWorkInBuildingRsp(RequestWorkInBuildingRsp other) : this() {
      userIncome_ = other.userIncome_;
      work_ = other.work_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWorkInBuildingRsp Clone() {
      return new RequestWorkInBuildingRsp(this);
    }

    /// <summary>Field number for the "UserIncome" field.</summary>
    public const int UserIncomeFieldNumber = 1;
    private long userIncome_;
    /// <summary>
    ///UserIncome 玩家收益(手动结束打工结算)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserIncome {
      get { return userIncome_; }
      set {
        userIncome_ = value;
      }
    }

    /// <summary>Field number for the "Work" field.</summary>
    public const int WorkFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto.PBuildingWork> _repeated_work_codec
        = pb::FieldCodec.ForMessage(18, global::Proto.PBuildingWork.Parser);
    private readonly pbc::RepeatedField<global::Proto.PBuildingWork> work_ = new pbc::RepeatedField<global::Proto.PBuildingWork>();
    /// <summary>
    /// 打工信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.PBuildingWork> Work {
      get { return work_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestWorkInBuildingRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestWorkInBuildingRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserIncome != other.UserIncome) return false;
      if(!work_.Equals(other.work_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserIncome != 0L) hash ^= UserIncome.GetHashCode();
      hash ^= work_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserIncome != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserIncome);
      }
      work_.WriteTo(output, _repeated_work_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserIncome != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserIncome);
      }
      size += work_.CalculateSize(_repeated_work_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestWorkInBuildingRsp other) {
      if (other == null) {
        return;
      }
      if (other.UserIncome != 0L) {
        UserIncome = other.UserIncome;
      }
      work_.Add(other.work_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserIncome = input.ReadInt64();
            break;
          }
          case 18: {
            work_.AddEntriesFrom(input, _repeated_work_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 升级
  /// </summary>
  public sealed partial class RequestBuildingUpgradeRsp : pb::IMessage<RequestBuildingUpgradeRsp> {
    private static readonly pb::MessageParser<RequestBuildingUpgradeRsp> _parser = new pb::MessageParser<RequestBuildingUpgradeRsp>(() => new RequestBuildingUpgradeRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestBuildingUpgradeRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingUpgradeRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingUpgradeRsp(RequestBuildingUpgradeRsp other) : this() {
      fkCityCode_ = other.fkCityCode_;
      uuid_ = other.uuid_;
      buildingCode_ = other.buildingCode_;
      locationX_ = other.locationX_;
      locationY_ = other.locationY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingUpgradeRsp Clone() {
      return new RequestBuildingUpgradeRsp(this);
    }

    /// <summary>Field number for the "FkCityCode" field.</summary>
    public const int FkCityCodeFieldNumber = 1;
    private string fkCityCode_ = "";
    /// <summary>
    ///FkCityCode 城市code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FkCityCode {
      get { return fkCityCode_; }
      set {
        fkCityCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 2;
    private long uuid_;
    /// <summary>
    /// 建筑Uuid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "BuildingCode" field.</summary>
    public const int BuildingCodeFieldNumber = 3;
    private long buildingCode_;
    /// <summary>
    ///BuildingCode 建筑code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BuildingCode {
      get { return buildingCode_; }
      set {
        buildingCode_ = value;
      }
    }

    /// <summary>Field number for the "LocationX" field.</summary>
    public const int LocationXFieldNumber = 4;
    private long locationX_;
    /// <summary>
    ///LocationX 建筑x坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LocationX {
      get { return locationX_; }
      set {
        locationX_ = value;
      }
    }

    /// <summary>Field number for the "LocationY" field.</summary>
    public const int LocationYFieldNumber = 5;
    private long locationY_;
    /// <summary>
    ///LocationY 建筑y坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LocationY {
      get { return locationY_; }
      set {
        locationY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestBuildingUpgradeRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestBuildingUpgradeRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FkCityCode != other.FkCityCode) return false;
      if (Uuid != other.Uuid) return false;
      if (BuildingCode != other.BuildingCode) return false;
      if (LocationX != other.LocationX) return false;
      if (LocationY != other.LocationY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FkCityCode.Length != 0) hash ^= FkCityCode.GetHashCode();
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (BuildingCode != 0L) hash ^= BuildingCode.GetHashCode();
      if (LocationX != 0L) hash ^= LocationX.GetHashCode();
      if (LocationY != 0L) hash ^= LocationY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FkCityCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FkCityCode);
      }
      if (Uuid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Uuid);
      }
      if (BuildingCode != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BuildingCode);
      }
      if (LocationX != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LocationX);
      }
      if (LocationY != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(LocationY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FkCityCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FkCityCode);
      }
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (BuildingCode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuildingCode);
      }
      if (LocationX != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LocationX);
      }
      if (LocationY != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LocationY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestBuildingUpgradeRsp other) {
      if (other == null) {
        return;
      }
      if (other.FkCityCode.Length != 0) {
        FkCityCode = other.FkCityCode;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      if (other.BuildingCode != 0L) {
        BuildingCode = other.BuildingCode;
      }
      if (other.LocationX != 0L) {
        LocationX = other.LocationX;
      }
      if (other.LocationY != 0L) {
        LocationY = other.LocationY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FkCityCode = input.ReadString();
            break;
          }
          case 16: {
            Uuid = input.ReadInt64();
            break;
          }
          case 24: {
            BuildingCode = input.ReadInt64();
            break;
          }
          case 32: {
            LocationX = input.ReadInt64();
            break;
          }
          case 40: {
            LocationY = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 添加建筑广播
  /// </summary>
  public sealed partial class RequestBuildingInitSuccRsp : pb::IMessage<RequestBuildingInitSuccRsp> {
    private static readonly pb::MessageParser<RequestBuildingInitSuccRsp> _parser = new pb::MessageParser<RequestBuildingInitSuccRsp>(() => new RequestBuildingInitSuccRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestBuildingInitSuccRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingInitSuccRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingInitSuccRsp(RequestBuildingInitSuccRsp other) : this() {
      fkCityCode_ = other.fkCityCode_;
      uuid_ = other.uuid_;
      userid_ = other.userid_;
      buildingCode_ = other.buildingCode_;
      locationX_ = other.locationX_;
      locationY_ = other.locationY_;
      towards_ = other.towards_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingInitSuccRsp Clone() {
      return new RequestBuildingInitSuccRsp(this);
    }

    /// <summary>Field number for the "FkCityCode" field.</summary>
    public const int FkCityCodeFieldNumber = 1;
    private string fkCityCode_ = "";
    /// <summary>
    ///FkCityCode 所属城市
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FkCityCode {
      get { return fkCityCode_; }
      set {
        fkCityCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 2;
    private long uuid_;
    /// <summary>
    /// 建筑Uuid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "Userid" field.</summary>
    public const int UseridFieldNumber = 3;
    private string userid_ = "";
    /// <summary>
    ///Userid 建造者id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BuildingCode" field.</summary>
    public const int BuildingCodeFieldNumber = 4;
    private long buildingCode_;
    /// <summary>
    /// BuildingCode 建筑id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BuildingCode {
      get { return buildingCode_; }
      set {
        buildingCode_ = value;
      }
    }

    /// <summary>Field number for the "LocationX" field.</summary>
    public const int LocationXFieldNumber = 6;
    private long locationX_;
    /// <summary>
    ///LocationX 建筑x坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LocationX {
      get { return locationX_; }
      set {
        locationX_ = value;
      }
    }

    /// <summary>Field number for the "LocationY" field.</summary>
    public const int LocationYFieldNumber = 7;
    private long locationY_;
    /// <summary>
    ///LocationY 建筑y坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LocationY {
      get { return locationY_; }
      set {
        locationY_ = value;
      }
    }

    /// <summary>Field number for the "Towards" field.</summary>
    public const int TowardsFieldNumber = 8;
    private long towards_;
    /// <summary>
    ///Towards 建筑朝向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Towards {
      get { return towards_; }
      set {
        towards_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestBuildingInitSuccRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestBuildingInitSuccRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FkCityCode != other.FkCityCode) return false;
      if (Uuid != other.Uuid) return false;
      if (Userid != other.Userid) return false;
      if (BuildingCode != other.BuildingCode) return false;
      if (LocationX != other.LocationX) return false;
      if (LocationY != other.LocationY) return false;
      if (Towards != other.Towards) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FkCityCode.Length != 0) hash ^= FkCityCode.GetHashCode();
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (Userid.Length != 0) hash ^= Userid.GetHashCode();
      if (BuildingCode != 0L) hash ^= BuildingCode.GetHashCode();
      if (LocationX != 0L) hash ^= LocationX.GetHashCode();
      if (LocationY != 0L) hash ^= LocationY.GetHashCode();
      if (Towards != 0L) hash ^= Towards.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FkCityCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FkCityCode);
      }
      if (Uuid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Uuid);
      }
      if (Userid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Userid);
      }
      if (BuildingCode != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BuildingCode);
      }
      if (LocationX != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LocationX);
      }
      if (LocationY != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(LocationY);
      }
      if (Towards != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Towards);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FkCityCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FkCityCode);
      }
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (Userid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (BuildingCode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuildingCode);
      }
      if (LocationX != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LocationX);
      }
      if (LocationY != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LocationY);
      }
      if (Towards != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Towards);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestBuildingInitSuccRsp other) {
      if (other == null) {
        return;
      }
      if (other.FkCityCode.Length != 0) {
        FkCityCode = other.FkCityCode;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      if (other.Userid.Length != 0) {
        Userid = other.Userid;
      }
      if (other.BuildingCode != 0L) {
        BuildingCode = other.BuildingCode;
      }
      if (other.LocationX != 0L) {
        LocationX = other.LocationX;
      }
      if (other.LocationY != 0L) {
        LocationY = other.LocationY;
      }
      if (other.Towards != 0L) {
        Towards = other.Towards;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FkCityCode = input.ReadString();
            break;
          }
          case 16: {
            Uuid = input.ReadInt64();
            break;
          }
          case 26: {
            Userid = input.ReadString();
            break;
          }
          case 32: {
            BuildingCode = input.ReadInt64();
            break;
          }
          case 48: {
            LocationX = input.ReadInt64();
            break;
          }
          case 56: {
            LocationY = input.ReadInt64();
            break;
          }
          case 64: {
            Towards = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 更改建筑类型成功广播
  /// </summary>
  public sealed partial class RequestBuildingChangeTypeRsp : pb::IMessage<RequestBuildingChangeTypeRsp> {
    private static readonly pb::MessageParser<RequestBuildingChangeTypeRsp> _parser = new pb::MessageParser<RequestBuildingChangeTypeRsp>(() => new RequestBuildingChangeTypeRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestBuildingChangeTypeRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingChangeTypeRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingChangeTypeRsp(RequestBuildingChangeTypeRsp other) : this() {
      fkCityCode_ = other.fkCityCode_;
      uuid_ = other.uuid_;
      userid_ = other.userid_;
      afterBuildingCode_ = other.afterBuildingCode_;
      locationX_ = other.locationX_;
      locationY_ = other.locationY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingChangeTypeRsp Clone() {
      return new RequestBuildingChangeTypeRsp(this);
    }

    /// <summary>Field number for the "FkCityCode" field.</summary>
    public const int FkCityCodeFieldNumber = 1;
    private string fkCityCode_ = "";
    /// <summary>
    ///FkCityCode 所属城市
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FkCityCode {
      get { return fkCityCode_; }
      set {
        fkCityCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 2;
    private long uuid_;
    /// <summary>
    /// 建筑Uuid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "Userid" field.</summary>
    public const int UseridFieldNumber = 3;
    private string userid_ = "";
    /// <summary>
    ///Userid 此建筑最大股东
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AfterBuildingCode" field.</summary>
    public const int AfterBuildingCodeFieldNumber = 4;
    private long afterBuildingCode_;
    /// <summary>
    /// AfterBuildingCode 建筑code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AfterBuildingCode {
      get { return afterBuildingCode_; }
      set {
        afterBuildingCode_ = value;
      }
    }

    /// <summary>Field number for the "LocationX" field.</summary>
    public const int LocationXFieldNumber = 6;
    private long locationX_;
    /// <summary>
    ///LocationX 建筑x坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LocationX {
      get { return locationX_; }
      set {
        locationX_ = value;
      }
    }

    /// <summary>Field number for the "LocationY" field.</summary>
    public const int LocationYFieldNumber = 7;
    private long locationY_;
    /// <summary>
    ///LocationY 建筑y坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LocationY {
      get { return locationY_; }
      set {
        locationY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestBuildingChangeTypeRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestBuildingChangeTypeRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FkCityCode != other.FkCityCode) return false;
      if (Uuid != other.Uuid) return false;
      if (Userid != other.Userid) return false;
      if (AfterBuildingCode != other.AfterBuildingCode) return false;
      if (LocationX != other.LocationX) return false;
      if (LocationY != other.LocationY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FkCityCode.Length != 0) hash ^= FkCityCode.GetHashCode();
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (Userid.Length != 0) hash ^= Userid.GetHashCode();
      if (AfterBuildingCode != 0L) hash ^= AfterBuildingCode.GetHashCode();
      if (LocationX != 0L) hash ^= LocationX.GetHashCode();
      if (LocationY != 0L) hash ^= LocationY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FkCityCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FkCityCode);
      }
      if (Uuid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Uuid);
      }
      if (Userid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Userid);
      }
      if (AfterBuildingCode != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(AfterBuildingCode);
      }
      if (LocationX != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LocationX);
      }
      if (LocationY != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(LocationY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FkCityCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FkCityCode);
      }
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (Userid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (AfterBuildingCode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AfterBuildingCode);
      }
      if (LocationX != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LocationX);
      }
      if (LocationY != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LocationY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestBuildingChangeTypeRsp other) {
      if (other == null) {
        return;
      }
      if (other.FkCityCode.Length != 0) {
        FkCityCode = other.FkCityCode;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      if (other.Userid.Length != 0) {
        Userid = other.Userid;
      }
      if (other.AfterBuildingCode != 0L) {
        AfterBuildingCode = other.AfterBuildingCode;
      }
      if (other.LocationX != 0L) {
        LocationX = other.LocationX;
      }
      if (other.LocationY != 0L) {
        LocationY = other.LocationY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FkCityCode = input.ReadString();
            break;
          }
          case 16: {
            Uuid = input.ReadInt64();
            break;
          }
          case 26: {
            Userid = input.ReadString();
            break;
          }
          case 32: {
            AfterBuildingCode = input.ReadInt64();
            break;
          }
          case 48: {
            LocationX = input.ReadInt64();
            break;
          }
          case 56: {
            LocationY = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestBuildingUserWorkRes : pb::IMessage<RequestBuildingUserWorkRes> {
    private static readonly pb::MessageParser<RequestBuildingUserWorkRes> _parser = new pb::MessageParser<RequestBuildingUserWorkRes>(() => new RequestBuildingUserWorkRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestBuildingUserWorkRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PbuildingReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingUserWorkRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingUserWorkRes(RequestBuildingUserWorkRes other) : this() {
      userid_ = other.userid_;
      uuid_ = other.uuid_;
      userIncome_ = other.userIncome_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBuildingUserWorkRes Clone() {
      return new RequestBuildingUserWorkRes(this);
    }

    /// <summary>Field number for the "Userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private string userid_ = "";
    /// <summary>
    /// 用户
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 2;
    private long uuid_;
    /// <summary>
    /// 建筑id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "UserIncome" field.</summary>
    public const int UserIncomeFieldNumber = 3;
    private long userIncome_;
    /// <summary>
    /// 收益
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserIncome {
      get { return userIncome_; }
      set {
        userIncome_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 4;
    private long status_;
    /// <summary>
    /// 状态（0开始打工 1结束打工）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestBuildingUserWorkRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestBuildingUserWorkRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      if (Uuid != other.Uuid) return false;
      if (UserIncome != other.UserIncome) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Userid.Length != 0) hash ^= Userid.GetHashCode();
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (UserIncome != 0L) hash ^= UserIncome.GetHashCode();
      if (Status != 0L) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Userid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (Uuid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Uuid);
      }
      if (UserIncome != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UserIncome);
      }
      if (Status != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Userid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (UserIncome != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserIncome);
      }
      if (Status != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestBuildingUserWorkRes other) {
      if (other == null) {
        return;
      }
      if (other.Userid.Length != 0) {
        Userid = other.Userid;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      if (other.UserIncome != 0L) {
        UserIncome = other.UserIncome;
      }
      if (other.Status != 0L) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
          case 16: {
            Uuid = input.ReadInt64();
            break;
          }
          case 24: {
            UserIncome = input.ReadInt64();
            break;
          }
          case 32: {
            Status = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
